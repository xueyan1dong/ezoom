//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4211
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ezMESWeb.Reports.report_templates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private DataTable1DataTable tableDataTable1;
        
        private report_process_cycletimeDataTable tablereport_process_cycletime;
        
        private report_lot_statusDataTable tablereport_lot_status;
        
        private report_lot_historyDataTable tablereport_lot_history;
        
        private DataTable2DataTable tableDataTable2;
        
        private report_process_bomDataTable tablereport_process_bom;
        
        private report_process_bom_totalDataTable tablereport_process_bom_total;
        
        private select_step_detailsDataTable tableselect_step_details;
        
        private report_dispatch_historyDataTable tablereport_dispatch_history;
        
        private report_product_in_processDataTable tablereport_product_in_process;
        
        private report_order_quantityDataTable tablereport_order_quantity;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["report_process_cycletime"] != null)) {
                    base.Tables.Add(new report_process_cycletimeDataTable(ds.Tables["report_process_cycletime"]));
                }
                if ((ds.Tables["report_lot_status"] != null)) {
                    base.Tables.Add(new report_lot_statusDataTable(ds.Tables["report_lot_status"]));
                }
                if ((ds.Tables["report_lot_history"] != null)) {
                    base.Tables.Add(new report_lot_historyDataTable(ds.Tables["report_lot_history"]));
                }
                if ((ds.Tables["DataTable2"] != null)) {
                    base.Tables.Add(new DataTable2DataTable(ds.Tables["DataTable2"]));
                }
                if ((ds.Tables["report_process_bom"] != null)) {
                    base.Tables.Add(new report_process_bomDataTable(ds.Tables["report_process_bom"]));
                }
                if ((ds.Tables["report_process_bom_total"] != null)) {
                    base.Tables.Add(new report_process_bom_totalDataTable(ds.Tables["report_process_bom_total"]));
                }
                if ((ds.Tables["select_step_details"] != null)) {
                    base.Tables.Add(new select_step_detailsDataTable(ds.Tables["select_step_details"]));
                }
                if ((ds.Tables["report_dispatch_history"] != null)) {
                    base.Tables.Add(new report_dispatch_historyDataTable(ds.Tables["report_dispatch_history"]));
                }
                if ((ds.Tables["report_product_in_process"] != null)) {
                    base.Tables.Add(new report_product_in_processDataTable(ds.Tables["report_product_in_process"]));
                }
                if ((ds.Tables["report_order_quantity"] != null)) {
                    base.Tables.Add(new report_order_quantityDataTable(ds.Tables["report_order_quantity"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public report_process_cycletimeDataTable report_process_cycletime {
            get {
                return this.tablereport_process_cycletime;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public report_lot_statusDataTable report_lot_status {
            get {
                return this.tablereport_lot_status;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public report_lot_historyDataTable report_lot_history {
            get {
                return this.tablereport_lot_history;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable2DataTable DataTable2 {
            get {
                return this.tableDataTable2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public report_process_bomDataTable report_process_bom {
            get {
                return this.tablereport_process_bom;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public report_process_bom_totalDataTable report_process_bom_total {
            get {
                return this.tablereport_process_bom_total;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public select_step_detailsDataTable select_step_details {
            get {
                return this.tableselect_step_details;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public report_dispatch_historyDataTable report_dispatch_history {
            get {
                return this.tablereport_dispatch_history;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public report_product_in_processDataTable report_product_in_process {
            get {
                return this.tablereport_product_in_process;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public report_order_quantityDataTable report_order_quantity {
            get {
                return this.tablereport_order_quantity;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["report_process_cycletime"] != null)) {
                    base.Tables.Add(new report_process_cycletimeDataTable(ds.Tables["report_process_cycletime"]));
                }
                if ((ds.Tables["report_lot_status"] != null)) {
                    base.Tables.Add(new report_lot_statusDataTable(ds.Tables["report_lot_status"]));
                }
                if ((ds.Tables["report_lot_history"] != null)) {
                    base.Tables.Add(new report_lot_historyDataTable(ds.Tables["report_lot_history"]));
                }
                if ((ds.Tables["DataTable2"] != null)) {
                    base.Tables.Add(new DataTable2DataTable(ds.Tables["DataTable2"]));
                }
                if ((ds.Tables["report_process_bom"] != null)) {
                    base.Tables.Add(new report_process_bomDataTable(ds.Tables["report_process_bom"]));
                }
                if ((ds.Tables["report_process_bom_total"] != null)) {
                    base.Tables.Add(new report_process_bom_totalDataTable(ds.Tables["report_process_bom_total"]));
                }
                if ((ds.Tables["select_step_details"] != null)) {
                    base.Tables.Add(new select_step_detailsDataTable(ds.Tables["select_step_details"]));
                }
                if ((ds.Tables["report_dispatch_history"] != null)) {
                    base.Tables.Add(new report_dispatch_historyDataTable(ds.Tables["report_dispatch_history"]));
                }
                if ((ds.Tables["report_product_in_process"] != null)) {
                    base.Tables.Add(new report_product_in_processDataTable(ds.Tables["report_product_in_process"]));
                }
                if ((ds.Tables["report_order_quantity"] != null)) {
                    base.Tables.Add(new report_order_quantityDataTable(ds.Tables["report_order_quantity"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
            this.tablereport_process_cycletime = ((report_process_cycletimeDataTable)(base.Tables["report_process_cycletime"]));
            if ((initTable == true)) {
                if ((this.tablereport_process_cycletime != null)) {
                    this.tablereport_process_cycletime.InitVars();
                }
            }
            this.tablereport_lot_status = ((report_lot_statusDataTable)(base.Tables["report_lot_status"]));
            if ((initTable == true)) {
                if ((this.tablereport_lot_status != null)) {
                    this.tablereport_lot_status.InitVars();
                }
            }
            this.tablereport_lot_history = ((report_lot_historyDataTable)(base.Tables["report_lot_history"]));
            if ((initTable == true)) {
                if ((this.tablereport_lot_history != null)) {
                    this.tablereport_lot_history.InitVars();
                }
            }
            this.tableDataTable2 = ((DataTable2DataTable)(base.Tables["DataTable2"]));
            if ((initTable == true)) {
                if ((this.tableDataTable2 != null)) {
                    this.tableDataTable2.InitVars();
                }
            }
            this.tablereport_process_bom = ((report_process_bomDataTable)(base.Tables["report_process_bom"]));
            if ((initTable == true)) {
                if ((this.tablereport_process_bom != null)) {
                    this.tablereport_process_bom.InitVars();
                }
            }
            this.tablereport_process_bom_total = ((report_process_bom_totalDataTable)(base.Tables["report_process_bom_total"]));
            if ((initTable == true)) {
                if ((this.tablereport_process_bom_total != null)) {
                    this.tablereport_process_bom_total.InitVars();
                }
            }
            this.tableselect_step_details = ((select_step_detailsDataTable)(base.Tables["select_step_details"]));
            if ((initTable == true)) {
                if ((this.tableselect_step_details != null)) {
                    this.tableselect_step_details.InitVars();
                }
            }
            this.tablereport_dispatch_history = ((report_dispatch_historyDataTable)(base.Tables["report_dispatch_history"]));
            if ((initTable == true)) {
                if ((this.tablereport_dispatch_history != null)) {
                    this.tablereport_dispatch_history.InitVars();
                }
            }
            this.tablereport_product_in_process = ((report_product_in_processDataTable)(base.Tables["report_product_in_process"]));
            if ((initTable == true)) {
                if ((this.tablereport_product_in_process != null)) {
                    this.tablereport_product_in_process.InitVars();
                }
            }
            this.tablereport_order_quantity = ((report_order_quantityDataTable)(base.Tables["report_order_quantity"]));
            if ((initTable == true)) {
                if ((this.tablereport_order_quantity != null)) {
                    this.tablereport_order_quantity.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
            this.tablereport_process_cycletime = new report_process_cycletimeDataTable();
            base.Tables.Add(this.tablereport_process_cycletime);
            this.tablereport_lot_status = new report_lot_statusDataTable();
            base.Tables.Add(this.tablereport_lot_status);
            this.tablereport_lot_history = new report_lot_historyDataTable();
            base.Tables.Add(this.tablereport_lot_history);
            this.tableDataTable2 = new DataTable2DataTable();
            base.Tables.Add(this.tableDataTable2);
            this.tablereport_process_bom = new report_process_bomDataTable();
            base.Tables.Add(this.tablereport_process_bom);
            this.tablereport_process_bom_total = new report_process_bom_totalDataTable();
            base.Tables.Add(this.tablereport_process_bom_total);
            this.tableselect_step_details = new select_step_detailsDataTable();
            base.Tables.Add(this.tableselect_step_details);
            this.tablereport_dispatch_history = new report_dispatch_historyDataTable();
            base.Tables.Add(this.tablereport_dispatch_history);
            this.tablereport_product_in_process = new report_product_in_processDataTable();
            base.Tables.Add(this.tablereport_product_in_process);
            this.tablereport_order_quantity = new report_order_quantityDataTable();
            base.Tables.Add(this.tablereport_order_quantity);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereport_process_cycletime() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereport_lot_status() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereport_lot_history() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataTable2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereport_process_bom() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereport_process_bom_total() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeselect_step_details() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereport_dispatch_history() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereport_product_in_process() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereport_order_quantity() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        public delegate void report_process_cycletimeRowChangeEventHandler(object sender, report_process_cycletimeRowChangeEvent e);
        
        public delegate void report_lot_statusRowChangeEventHandler(object sender, report_lot_statusRowChangeEvent e);
        
        public delegate void report_lot_historyRowChangeEventHandler(object sender, report_lot_historyRowChangeEvent e);
        
        public delegate void DataTable2RowChangeEventHandler(object sender, DataTable2RowChangeEvent e);
        
        public delegate void report_process_bomRowChangeEventHandler(object sender, report_process_bomRowChangeEvent e);
        
        public delegate void report_process_bom_totalRowChangeEventHandler(object sender, report_process_bom_totalRowChangeEvent e);
        
        public delegate void select_step_detailsRowChangeEventHandler(object sender, select_step_detailsRowChangeEvent e);
        
        public delegate void report_dispatch_historyRowChangeEventHandler(object sender, report_dispatch_historyRowChangeEvent e);
        
        public delegate void report_product_in_processRowChangeEventHandler(object sender, report_product_in_processRowChangeEvent e);
        
        public delegate void report_order_quantityRowChangeEventHandler(object sender, report_order_quantityRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.TypedTableBase<DataTable1Row> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnorder_type;
            
            private global::System.Data.DataColumn columnclient_name;
            
            private global::System.Data.DataColumn columnponumber;
            
            private global::System.Data.DataColumn columnorder_date;
            
            private global::System.Data.DataColumn columnquantity_made;
            
            private global::System.Data.DataColumn columnquantity_in_process;
            
            private global::System.Data.DataColumn columnquantity_shipped;
            
            private global::System.Data.DataColumn columnquantity_requested;
            
            private global::System.Data.DataColumn columnuom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn order_typeColumn {
                get {
                    return this.columnorder_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn client_nameColumn {
                get {
                    return this.columnclient_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ponumberColumn {
                get {
                    return this.columnponumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn order_dateColumn {
                get {
                    return this.columnorder_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_madeColumn {
                get {
                    return this.columnquantity_made;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_in_processColumn {
                get {
                    return this.columnquantity_in_process;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_shippedColumn {
                get {
                    return this.columnquantity_shipped;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_requestedColumn {
                get {
                    return this.columnquantity_requested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row AddDataTable1Row(uint id, string order_type, string client_name, string ponumber, System.DateTime order_date, decimal quantity_made, decimal quantity_in_process, decimal quantity_shipped, decimal quantity_requested, string uom) {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        order_type,
                        client_name,
                        ponumber,
                        order_date,
                        quantity_made,
                        quantity_in_process,
                        quantity_shipped,
                        quantity_requested,
                        uom};
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnorder_type = base.Columns["order_type"];
                this.columnclient_name = base.Columns["client_name"];
                this.columnponumber = base.Columns["ponumber"];
                this.columnorder_date = base.Columns["order_date"];
                this.columnquantity_made = base.Columns["quantity_made"];
                this.columnquantity_in_process = base.Columns["quantity_in_process"];
                this.columnquantity_shipped = base.Columns["quantity_shipped"];
                this.columnquantity_requested = base.Columns["quantity_requested"];
                this.columnuom = base.Columns["uom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnorder_type = new global::System.Data.DataColumn("order_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_type);
                this.columnclient_name = new global::System.Data.DataColumn("client_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclient_name);
                this.columnponumber = new global::System.Data.DataColumn("ponumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnponumber);
                this.columnorder_date = new global::System.Data.DataColumn("order_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_date);
                this.columnquantity_made = new global::System.Data.DataColumn("quantity_made", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_made);
                this.columnquantity_in_process = new global::System.Data.DataColumn("quantity_in_process", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_in_process);
                this.columnquantity_shipped = new global::System.Data.DataColumn("quantity_shipped", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_shipped);
                this.columnquantity_requested = new global::System.Data.DataColumn("quantity_requested", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_requested);
                this.columnuom = new global::System.Data.DataColumn("uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
                this.columnid.AllowDBNull = false;
                this.columnorder_type.AllowDBNull = false;
                this.columnorder_type.MaxLength = 27;
                this.columnclient_name.MaxLength = 40;
                this.columnponumber.MaxLength = 40;
                this.columnorder_date.AllowDBNull = false;
                this.columnquantity_made.AllowDBNull = false;
                this.columnquantity_in_process.AllowDBNull = false;
                this.columnquantity_shipped.AllowDBNull = false;
                this.columnquantity_requested.AllowDBNull = false;
                this.columnuom.AllowDBNull = false;
                this.columnuom.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class report_process_cycletimeDataTable : global::System.Data.TypedTableBase<report_process_cycletimeRow> {
            
            private global::System.Data.DataColumn columnposition_id;
            
            private global::System.Data.DataColumn columnsub_position_id;
            
            private global::System.Data.DataColumn columnstep;
            
            private global::System.Data.DataColumn columnstep_type;
            
            private global::System.Data.DataColumn columnmin_time;
            
            private global::System.Data.DataColumn columnmax_time;
            
            private global::System.Data.DataColumn columnaverage_time;
            
            private global::System.Data.DataColumn columnprev_step_pos;
            
            private global::System.Data.DataColumn columnnext_step_pos;
            
            private global::System.Data.DataColumn columnfalse_step_pos;
            
            private global::System.Data.DataColumn columnrework_limit;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnaverage_yield;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_cycletimeDataTable() {
                this.TableName = "report_process_cycletime";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_process_cycletimeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected report_process_cycletimeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn position_idColumn {
                get {
                    return this.columnposition_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sub_position_idColumn {
                get {
                    return this.columnsub_position_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stepColumn {
                get {
                    return this.columnstep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn step_typeColumn {
                get {
                    return this.columnstep_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn min_timeColumn {
                get {
                    return this.columnmin_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn max_timeColumn {
                get {
                    return this.columnmax_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn average_timeColumn {
                get {
                    return this.columnaverage_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prev_step_posColumn {
                get {
                    return this.columnprev_step_pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn next_step_posColumn {
                get {
                    return this.columnnext_step_pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn false_step_posColumn {
                get {
                    return this.columnfalse_step_pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rework_limitColumn {
                get {
                    return this.columnrework_limit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn average_yieldColumn {
                get {
                    return this.columnaverage_yield;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_cycletimeRow this[int index] {
                get {
                    return ((report_process_cycletimeRow)(this.Rows[index]));
                }
            }
            
            public event report_process_cycletimeRowChangeEventHandler report_process_cycletimeRowChanging;
            
            public event report_process_cycletimeRowChangeEventHandler report_process_cycletimeRowChanged;
            
            public event report_process_cycletimeRowChangeEventHandler report_process_cycletimeRowDeleting;
            
            public event report_process_cycletimeRowChangeEventHandler report_process_cycletimeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addreport_process_cycletimeRow(report_process_cycletimeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_cycletimeRow Addreport_process_cycletimeRow(string position_id, string sub_position_id, string step, string step_type, string min_time, string max_time, string average_time, string prev_step_pos, string next_step_pos, string false_step_pos, string rework_limit, string description, string average_yield) {
                report_process_cycletimeRow rowreport_process_cycletimeRow = ((report_process_cycletimeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        position_id,
                        sub_position_id,
                        step,
                        step_type,
                        min_time,
                        max_time,
                        average_time,
                        prev_step_pos,
                        next_step_pos,
                        false_step_pos,
                        rework_limit,
                        description,
                        average_yield};
                rowreport_process_cycletimeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreport_process_cycletimeRow);
                return rowreport_process_cycletimeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                report_process_cycletimeDataTable cln = ((report_process_cycletimeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new report_process_cycletimeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnposition_id = base.Columns["position_id"];
                this.columnsub_position_id = base.Columns["sub_position_id"];
                this.columnstep = base.Columns["step"];
                this.columnstep_type = base.Columns["step_type"];
                this.columnmin_time = base.Columns["min_time"];
                this.columnmax_time = base.Columns["max_time"];
                this.columnaverage_time = base.Columns["average_time"];
                this.columnprev_step_pos = base.Columns["prev_step_pos"];
                this.columnnext_step_pos = base.Columns["next_step_pos"];
                this.columnfalse_step_pos = base.Columns["false_step_pos"];
                this.columnrework_limit = base.Columns["rework_limit"];
                this.columndescription = base.Columns["description"];
                this.columnaverage_yield = base.Columns["average_yield"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnposition_id = new global::System.Data.DataColumn("position_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition_id);
                this.columnsub_position_id = new global::System.Data.DataColumn("sub_position_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsub_position_id);
                this.columnstep = new global::System.Data.DataColumn("step", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstep);
                this.columnstep_type = new global::System.Data.DataColumn("step_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstep_type);
                this.columnmin_time = new global::System.Data.DataColumn("min_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmin_time);
                this.columnmax_time = new global::System.Data.DataColumn("max_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_time);
                this.columnaverage_time = new global::System.Data.DataColumn("average_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaverage_time);
                this.columnprev_step_pos = new global::System.Data.DataColumn("prev_step_pos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprev_step_pos);
                this.columnnext_step_pos = new global::System.Data.DataColumn("next_step_pos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnext_step_pos);
                this.columnfalse_step_pos = new global::System.Data.DataColumn("false_step_pos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfalse_step_pos);
                this.columnrework_limit = new global::System.Data.DataColumn("rework_limit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrework_limit);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnaverage_yield = new global::System.Data.DataColumn("average_yield", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaverage_yield);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_cycletimeRow Newreport_process_cycletimeRow() {
                return ((report_process_cycletimeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new report_process_cycletimeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(report_process_cycletimeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.report_process_cycletimeRowChanged != null)) {
                    this.report_process_cycletimeRowChanged(this, new report_process_cycletimeRowChangeEvent(((report_process_cycletimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.report_process_cycletimeRowChanging != null)) {
                    this.report_process_cycletimeRowChanging(this, new report_process_cycletimeRowChangeEvent(((report_process_cycletimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.report_process_cycletimeRowDeleted != null)) {
                    this.report_process_cycletimeRowDeleted(this, new report_process_cycletimeRowChangeEvent(((report_process_cycletimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.report_process_cycletimeRowDeleting != null)) {
                    this.report_process_cycletimeRowDeleting(this, new report_process_cycletimeRowChangeEvent(((report_process_cycletimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removereport_process_cycletimeRow(report_process_cycletimeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "report_process_cycletimeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class report_lot_statusDataTable : global::System.Data.TypedTableBase<report_lot_statusRow> {
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnorder_id;
            
            private global::System.Data.DataColumn columnponumber;
            
            private global::System.Data.DataColumn columnclient_id;
            
            private global::System.Data.DataColumn columnclient_name;
            
            private global::System.Data.DataColumn columnprocess_id;
            
            private global::System.Data.DataColumn columnprocess_name;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnstart_quantity;
            
            private global::System.Data.DataColumn columnactual_quantity;
            
            private global::System.Data.DataColumn columnuomid;
            
            private global::System.Data.DataColumn columnuom_name;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columncontact_name;
            
            private global::System.Data.DataColumn columnpriority;
            
            private global::System.Data.DataColumn columndispatch_time;
            
            private global::System.Data.DataColumn columnoutput_time;
            
            private global::System.Data.DataColumn columncomment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_statusDataTable() {
                this.TableName = "report_lot_status";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_lot_statusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected report_lot_statusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn order_idColumn {
                get {
                    return this.columnorder_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ponumberColumn {
                get {
                    return this.columnponumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn client_idColumn {
                get {
                    return this.columnclient_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn client_nameColumn {
                get {
                    return this.columnclient_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn process_idColumn {
                get {
                    return this.columnprocess_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn process_nameColumn {
                get {
                    return this.columnprocess_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_quantityColumn {
                get {
                    return this.columnstart_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn actual_quantityColumn {
                get {
                    return this.columnactual_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomidColumn {
                get {
                    return this.columnuomid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uom_nameColumn {
                get {
                    return this.columnuom_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contact_nameColumn {
                get {
                    return this.columncontact_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priorityColumn {
                get {
                    return this.columnpriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dispatch_timeColumn {
                get {
                    return this.columndispatch_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn output_timeColumn {
                get {
                    return this.columnoutput_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn commentColumn {
                get {
                    return this.columncomment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_statusRow this[int index] {
                get {
                    return ((report_lot_statusRow)(this.Rows[index]));
                }
            }
            
            public event report_lot_statusRowChangeEventHandler report_lot_statusRowChanging;
            
            public event report_lot_statusRowChangeEventHandler report_lot_statusRowChanged;
            
            public event report_lot_statusRowChangeEventHandler report_lot_statusRowDeleting;
            
            public event report_lot_statusRowChangeEventHandler report_lot_statusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addreport_lot_statusRow(report_lot_statusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_statusRow Addreport_lot_statusRow(
                        uint product_id, 
                        string product_name, 
                        uint order_id, 
                        string ponumber, 
                        uint client_id, 
                        string client_name, 
                        uint process_id, 
                        string process_name, 
                        string status, 
                        decimal start_quantity, 
                        decimal actual_quantity, 
                        ushort uomid, 
                        string uom_name, 
                        uint contact, 
                        string contact_name, 
                        byte priority, 
                        System.DateTime dispatch_time, 
                        System.DateTime output_time, 
                        string comment) {
                report_lot_statusRow rowreport_lot_statusRow = ((report_lot_statusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        product_id,
                        product_name,
                        order_id,
                        ponumber,
                        client_id,
                        client_name,
                        process_id,
                        process_name,
                        status,
                        start_quantity,
                        actual_quantity,
                        uomid,
                        uom_name,
                        contact,
                        contact_name,
                        priority,
                        dispatch_time,
                        output_time,
                        comment};
                rowreport_lot_statusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreport_lot_statusRow);
                return rowreport_lot_statusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                report_lot_statusDataTable cln = ((report_lot_statusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new report_lot_statusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnorder_id = base.Columns["order_id"];
                this.columnponumber = base.Columns["ponumber"];
                this.columnclient_id = base.Columns["client_id"];
                this.columnclient_name = base.Columns["client_name"];
                this.columnprocess_id = base.Columns["process_id"];
                this.columnprocess_name = base.Columns["process_name"];
                this.columnstatus = base.Columns["status"];
                this.columnstart_quantity = base.Columns["start_quantity"];
                this.columnactual_quantity = base.Columns["actual_quantity"];
                this.columnuomid = base.Columns["uomid"];
                this.columnuom_name = base.Columns["uom_name"];
                this.columncontact = base.Columns["contact"];
                this.columncontact_name = base.Columns["contact_name"];
                this.columnpriority = base.Columns["priority"];
                this.columndispatch_time = base.Columns["dispatch_time"];
                this.columnoutput_time = base.Columns["output_time"];
                this.columncomment = base.Columns["comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnorder_id = new global::System.Data.DataColumn("order_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_id);
                this.columnponumber = new global::System.Data.DataColumn("ponumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnponumber);
                this.columnclient_id = new global::System.Data.DataColumn("client_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclient_id);
                this.columnclient_name = new global::System.Data.DataColumn("client_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclient_name);
                this.columnprocess_id = new global::System.Data.DataColumn("process_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprocess_id);
                this.columnprocess_name = new global::System.Data.DataColumn("process_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprocess_name);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnstart_quantity = new global::System.Data.DataColumn("start_quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_quantity);
                this.columnactual_quantity = new global::System.Data.DataColumn("actual_quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactual_quantity);
                this.columnuomid = new global::System.Data.DataColumn("uomid", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuomid);
                this.columnuom_name = new global::System.Data.DataColumn("uom_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom_name);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columncontact_name = new global::System.Data.DataColumn("contact_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact_name);
                this.columnpriority = new global::System.Data.DataColumn("priority", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriority);
                this.columndispatch_time = new global::System.Data.DataColumn("dispatch_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndispatch_time);
                this.columnoutput_time = new global::System.Data.DataColumn("output_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoutput_time);
                this.columncomment = new global::System.Data.DataColumn("comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomment);
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_name.AllowDBNull = false;
                this.columnproduct_name.MaxLength = 255;
                this.columnponumber.MaxLength = 40;
                this.columnclient_name.AllowDBNull = false;
                this.columnclient_name.MaxLength = 40;
                this.columnprocess_id.AllowDBNull = false;
                this.columnprocess_name.AllowDBNull = false;
                this.columnprocess_name.MaxLength = 255;
                this.columnstatus.AllowDBNull = false;
                this.columnstatus.MaxLength = 30;
                this.columnstart_quantity.AllowDBNull = false;
                this.columnuomid.AllowDBNull = false;
                this.columnuom_name.AllowDBNull = false;
                this.columnuom_name.MaxLength = 20;
                this.columncontact_name.Caption = "concat(e.firstname, \' \', e.lastname)";
                this.columncontact_name.MaxLength = 41;
                this.columnpriority.AllowDBNull = false;
                this.columndispatch_time.AllowDBNull = false;
                this.columncomment.MaxLength = 21845;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_statusRow Newreport_lot_statusRow() {
                return ((report_lot_statusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new report_lot_statusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(report_lot_statusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.report_lot_statusRowChanged != null)) {
                    this.report_lot_statusRowChanged(this, new report_lot_statusRowChangeEvent(((report_lot_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.report_lot_statusRowChanging != null)) {
                    this.report_lot_statusRowChanging(this, new report_lot_statusRowChangeEvent(((report_lot_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.report_lot_statusRowDeleted != null)) {
                    this.report_lot_statusRowDeleted(this, new report_lot_statusRowChangeEvent(((report_lot_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.report_lot_statusRowDeleting != null)) {
                    this.report_lot_statusRowDeleting(this, new report_lot_statusRowChangeEvent(((report_lot_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removereport_lot_statusRow(report_lot_statusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "report_lot_statusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class report_lot_historyDataTable : global::System.Data.TypedTableBase<report_lot_historyRow> {
            
            private global::System.Data.DataColumn columnstart_time;
            
            private global::System.Data.DataColumn columnend_time;
            
            private global::System.Data.DataColumn columnprocess_id;
            
            private global::System.Data.DataColumn columnprocess_name;
            
            private global::System.Data.DataColumn columnsub_process_id;
            
            private global::System.Data.DataColumn columnsub_process_name;
            
            private global::System.Data.DataColumn columnposition_id;
            
            private global::System.Data.DataColumn columnsub_position_id;
            
            private global::System.Data.DataColumn columnstep_id;
            
            private global::System.Data.DataColumn columnstep_name;
            
            private global::System.Data.DataColumn columnstart_operator_id;
            
            private global::System.Data.DataColumn columnstart_operator_name;
            
            private global::System.Data.DataColumn columnend_operator_id;
            
            private global::System.Data.DataColumn columnend_operator_name;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnstart_quantity;
            
            private global::System.Data.DataColumn columnend_quantity;
            
            private global::System.Data.DataColumn columnuomid;
            
            private global::System.Data.DataColumn columnuom_name;
            
            private global::System.Data.DataColumn columnequipment_id;
            
            private global::System.Data.DataColumn columnequipment_name;
            
            private global::System.Data.DataColumn columndevice_id;
            
            private global::System.Data.DataColumn columnapprover_id;
            
            private global::System.Data.DataColumn columnapprover_name;
            
            private global::System.Data.DataColumn columnresult;
            
            private global::System.Data.DataColumn columncomment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_historyDataTable() {
                this.TableName = "report_lot_history";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_lot_historyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected report_lot_historyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_timeColumn {
                get {
                    return this.columnstart_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_timeColumn {
                get {
                    return this.columnend_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn process_idColumn {
                get {
                    return this.columnprocess_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn process_nameColumn {
                get {
                    return this.columnprocess_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sub_process_idColumn {
                get {
                    return this.columnsub_process_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sub_process_nameColumn {
                get {
                    return this.columnsub_process_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn position_idColumn {
                get {
                    return this.columnposition_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sub_position_idColumn {
                get {
                    return this.columnsub_position_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn step_idColumn {
                get {
                    return this.columnstep_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn step_nameColumn {
                get {
                    return this.columnstep_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_operator_idColumn {
                get {
                    return this.columnstart_operator_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_operator_nameColumn {
                get {
                    return this.columnstart_operator_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_operator_idColumn {
                get {
                    return this.columnend_operator_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_operator_nameColumn {
                get {
                    return this.columnend_operator_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_quantityColumn {
                get {
                    return this.columnstart_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_quantityColumn {
                get {
                    return this.columnend_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomidColumn {
                get {
                    return this.columnuomid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uom_nameColumn {
                get {
                    return this.columnuom_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn equipment_idColumn {
                get {
                    return this.columnequipment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn equipment_nameColumn {
                get {
                    return this.columnequipment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn device_idColumn {
                get {
                    return this.columndevice_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approver_idColumn {
                get {
                    return this.columnapprover_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approver_nameColumn {
                get {
                    return this.columnapprover_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn resultColumn {
                get {
                    return this.columnresult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn commentColumn {
                get {
                    return this.columncomment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_historyRow this[int index] {
                get {
                    return ((report_lot_historyRow)(this.Rows[index]));
                }
            }
            
            public event report_lot_historyRowChangeEventHandler report_lot_historyRowChanging;
            
            public event report_lot_historyRowChangeEventHandler report_lot_historyRowChanged;
            
            public event report_lot_historyRowChangeEventHandler report_lot_historyRowDeleting;
            
            public event report_lot_historyRowChangeEventHandler report_lot_historyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addreport_lot_historyRow(report_lot_historyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_historyRow Addreport_lot_historyRow(
                        System.DateTime start_time, 
                        System.DateTime end_time, 
                        uint process_id, 
                        string process_name, 
                        uint sub_process_id, 
                        string sub_process_name, 
                        uint position_id, 
                        uint sub_position_id, 
                        uint step_id, 
                        string step_name, 
                        uint start_operator_id, 
                        string start_operator_name, 
                        uint end_operator_id, 
                        string end_operator_name, 
                        string status, 
                        decimal start_quantity, 
                        decimal end_quantity, 
                        ushort uomid, 
                        string uom_name, 
                        uint equipment_id, 
                        string equipment_name, 
                        uint device_id, 
                        uint approver_id, 
                        string approver_name, 
                        string result, 
                        string comment) {
                report_lot_historyRow rowreport_lot_historyRow = ((report_lot_historyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        start_time,
                        end_time,
                        process_id,
                        process_name,
                        sub_process_id,
                        sub_process_name,
                        position_id,
                        sub_position_id,
                        step_id,
                        step_name,
                        start_operator_id,
                        start_operator_name,
                        end_operator_id,
                        end_operator_name,
                        status,
                        start_quantity,
                        end_quantity,
                        uomid,
                        uom_name,
                        equipment_id,
                        equipment_name,
                        device_id,
                        approver_id,
                        approver_name,
                        result,
                        comment};
                rowreport_lot_historyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreport_lot_historyRow);
                return rowreport_lot_historyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                report_lot_historyDataTable cln = ((report_lot_historyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new report_lot_historyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstart_time = base.Columns["start_time"];
                this.columnend_time = base.Columns["end_time"];
                this.columnprocess_id = base.Columns["process_id"];
                this.columnprocess_name = base.Columns["process_name"];
                this.columnsub_process_id = base.Columns["sub_process_id"];
                this.columnsub_process_name = base.Columns["sub_process_name"];
                this.columnposition_id = base.Columns["position_id"];
                this.columnsub_position_id = base.Columns["sub_position_id"];
                this.columnstep_id = base.Columns["step_id"];
                this.columnstep_name = base.Columns["step_name"];
                this.columnstart_operator_id = base.Columns["start_operator_id"];
                this.columnstart_operator_name = base.Columns["start_operator_name"];
                this.columnend_operator_id = base.Columns["end_operator_id"];
                this.columnend_operator_name = base.Columns["end_operator_name"];
                this.columnstatus = base.Columns["status"];
                this.columnstart_quantity = base.Columns["start_quantity"];
                this.columnend_quantity = base.Columns["end_quantity"];
                this.columnuomid = base.Columns["uomid"];
                this.columnuom_name = base.Columns["uom_name"];
                this.columnequipment_id = base.Columns["equipment_id"];
                this.columnequipment_name = base.Columns["equipment_name"];
                this.columndevice_id = base.Columns["device_id"];
                this.columnapprover_id = base.Columns["approver_id"];
                this.columnapprover_name = base.Columns["approver_name"];
                this.columnresult = base.Columns["result"];
                this.columncomment = base.Columns["comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstart_time = new global::System.Data.DataColumn("start_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_time);
                this.columnend_time = new global::System.Data.DataColumn("end_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_time);
                this.columnprocess_id = new global::System.Data.DataColumn("process_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprocess_id);
                this.columnprocess_name = new global::System.Data.DataColumn("process_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprocess_name);
                this.columnsub_process_id = new global::System.Data.DataColumn("sub_process_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsub_process_id);
                this.columnsub_process_name = new global::System.Data.DataColumn("sub_process_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsub_process_name);
                this.columnposition_id = new global::System.Data.DataColumn("position_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition_id);
                this.columnsub_position_id = new global::System.Data.DataColumn("sub_position_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsub_position_id);
                this.columnstep_id = new global::System.Data.DataColumn("step_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstep_id);
                this.columnstep_name = new global::System.Data.DataColumn("step_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstep_name);
                this.columnstart_operator_id = new global::System.Data.DataColumn("start_operator_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_operator_id);
                this.columnstart_operator_name = new global::System.Data.DataColumn("start_operator_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_operator_name);
                this.columnend_operator_id = new global::System.Data.DataColumn("end_operator_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_operator_id);
                this.columnend_operator_name = new global::System.Data.DataColumn("end_operator_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_operator_name);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnstart_quantity = new global::System.Data.DataColumn("start_quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_quantity);
                this.columnend_quantity = new global::System.Data.DataColumn("end_quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_quantity);
                this.columnuomid = new global::System.Data.DataColumn("uomid", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuomid);
                this.columnuom_name = new global::System.Data.DataColumn("uom_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom_name);
                this.columnequipment_id = new global::System.Data.DataColumn("equipment_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnequipment_id);
                this.columnequipment_name = new global::System.Data.DataColumn("equipment_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnequipment_name);
                this.columndevice_id = new global::System.Data.DataColumn("device_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndevice_id);
                this.columnapprover_id = new global::System.Data.DataColumn("approver_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprover_id);
                this.columnapprover_name = new global::System.Data.DataColumn("approver_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprover_name);
                this.columnresult = new global::System.Data.DataColumn("result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresult);
                this.columncomment = new global::System.Data.DataColumn("comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomment);
                this.columnprocess_name.MaxLength = 255;
                this.columnsub_process_name.MaxLength = 255;
                this.columnstep_name.MaxLength = 255;
                this.columnstart_operator_name.MaxLength = 60;
                this.columnend_operator_name.MaxLength = 60;
                this.columnstatus.MaxLength = 20;
                this.columnuom_name.MaxLength = 20;
                this.columnequipment_name.MaxLength = 255;
                this.columnapprover_name.MaxLength = 60;
                this.columnresult.MaxLength = 65535;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_historyRow Newreport_lot_historyRow() {
                return ((report_lot_historyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new report_lot_historyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(report_lot_historyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.report_lot_historyRowChanged != null)) {
                    this.report_lot_historyRowChanged(this, new report_lot_historyRowChangeEvent(((report_lot_historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.report_lot_historyRowChanging != null)) {
                    this.report_lot_historyRowChanging(this, new report_lot_historyRowChangeEvent(((report_lot_historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.report_lot_historyRowDeleted != null)) {
                    this.report_lot_historyRowDeleted(this, new report_lot_historyRowChangeEvent(((report_lot_historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.report_lot_historyRowDeleting != null)) {
                    this.report_lot_historyRowDeleting(this, new report_lot_historyRowChangeEvent(((report_lot_historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removereport_lot_historyRow(report_lot_historyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "report_lot_historyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable2DataTable : global::System.Data.TypedTableBase<DataTable2Row> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnorder_type;
            
            private global::System.Data.DataColumn columnclient_name;
            
            private global::System.Data.DataColumn columnponumber;
            
            private global::System.Data.DataColumn columnorder_date;
            
            private global::System.Data.DataColumn columnquantity_made;
            
            private global::System.Data.DataColumn columnquantity_in_process;
            
            private global::System.Data.DataColumn columnquantity_shipped;
            
            private global::System.Data.DataColumn columnquantity_requested;
            
            private global::System.Data.DataColumn columnuom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable2DataTable() {
                this.TableName = "DataTable2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataTable2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn order_typeColumn {
                get {
                    return this.columnorder_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn client_nameColumn {
                get {
                    return this.columnclient_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ponumberColumn {
                get {
                    return this.columnponumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn order_dateColumn {
                get {
                    return this.columnorder_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_madeColumn {
                get {
                    return this.columnquantity_made;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_in_processColumn {
                get {
                    return this.columnquantity_in_process;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_shippedColumn {
                get {
                    return this.columnquantity_shipped;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_requestedColumn {
                get {
                    return this.columnquantity_requested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable2Row this[int index] {
                get {
                    return ((DataTable2Row)(this.Rows[index]));
                }
            }
            
            public event DataTable2RowChangeEventHandler DataTable2RowChanging;
            
            public event DataTable2RowChangeEventHandler DataTable2RowChanged;
            
            public event DataTable2RowChangeEventHandler DataTable2RowDeleting;
            
            public event DataTable2RowChangeEventHandler DataTable2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataTable2Row(DataTable2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable2Row AddDataTable2Row(int id, string order_type, string client_name, string ponumber, System.DateTime order_date, decimal quantity_made, decimal quantity_in_process, decimal quantity_shipped, string quantity_requested, string uom) {
                DataTable2Row rowDataTable2Row = ((DataTable2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        order_type,
                        client_name,
                        ponumber,
                        order_date,
                        quantity_made,
                        quantity_in_process,
                        quantity_shipped,
                        quantity_requested,
                        uom};
                rowDataTable2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable2Row);
                return rowDataTable2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataTable2DataTable cln = ((DataTable2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnorder_type = base.Columns["order_type"];
                this.columnclient_name = base.Columns["client_name"];
                this.columnponumber = base.Columns["ponumber"];
                this.columnorder_date = base.Columns["order_date"];
                this.columnquantity_made = base.Columns["quantity_made"];
                this.columnquantity_in_process = base.Columns["quantity_in_process"];
                this.columnquantity_shipped = base.Columns["quantity_shipped"];
                this.columnquantity_requested = base.Columns["quantity_requested"];
                this.columnuom = base.Columns["uom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnorder_type = new global::System.Data.DataColumn("order_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_type);
                this.columnclient_name = new global::System.Data.DataColumn("client_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclient_name);
                this.columnponumber = new global::System.Data.DataColumn("ponumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnponumber);
                this.columnorder_date = new global::System.Data.DataColumn("order_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_date);
                this.columnquantity_made = new global::System.Data.DataColumn("quantity_made", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_made);
                this.columnquantity_in_process = new global::System.Data.DataColumn("quantity_in_process", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_in_process);
                this.columnquantity_shipped = new global::System.Data.DataColumn("quantity_shipped", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_shipped);
                this.columnquantity_requested = new global::System.Data.DataColumn("quantity_requested", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_requested);
                this.columnuom = new global::System.Data.DataColumn("uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
                this.columnorder_type.MaxLength = 27;
                this.columnclient_name.MaxLength = 40;
                this.columnponumber.MaxLength = 40;
                this.columnuom.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable2Row NewDataTable2Row() {
                return ((DataTable2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable2RowChanged != null)) {
                    this.DataTable2RowChanged(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable2RowChanging != null)) {
                    this.DataTable2RowChanging(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable2RowDeleted != null)) {
                    this.DataTable2RowDeleted(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable2RowDeleting != null)) {
                    this.DataTable2RowDeleting(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataTable2Row(DataTable2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class report_process_bomDataTable : global::System.Data.TypedTableBase<report_process_bomRow> {
            
            private global::System.Data.DataColumn columnposition_id;
            
            private global::System.Data.DataColumn columnsub_position_id;
            
            private global::System.Data.DataColumn columnstep;
            
            private global::System.Data.DataColumn columnrecipe;
            
            private global::System.Data.DataColumn columnsource_type;
            
            private global::System.Data.DataColumn columningredient_id;
            
            private global::System.Data.DataColumn columningredient_name;
            
            private global::System.Data.DataColumn columnquantity;
            
            private global::System.Data.DataColumn columnuom;
            
            private global::System.Data.DataColumn columninput_order;
            
            private global::System.Data.DataColumn columnunassigned_quantity;
            
            private global::System.Data.DataColumn columnassigned_quantity;
            
            private global::System.Data.DataColumn columnalert_quantity;
            
            private global::System.Data.DataColumn columnifalert;
            
            private global::System.Data.DataColumn columnunassigned_uom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bomDataTable() {
                this.TableName = "report_process_bom";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_process_bomDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected report_process_bomDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn position_idColumn {
                get {
                    return this.columnposition_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sub_position_idColumn {
                get {
                    return this.columnsub_position_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stepColumn {
                get {
                    return this.columnstep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recipeColumn {
                get {
                    return this.columnrecipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn source_typeColumn {
                get {
                    return this.columnsource_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ingredient_idColumn {
                get {
                    return this.columningredient_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ingredient_nameColumn {
                get {
                    return this.columningredient_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn input_orderColumn {
                get {
                    return this.columninput_order;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unassigned_quantityColumn {
                get {
                    return this.columnunassigned_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assigned_quantityColumn {
                get {
                    return this.columnassigned_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alert_quantityColumn {
                get {
                    return this.columnalert_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ifalertColumn {
                get {
                    return this.columnifalert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unassigned_uomColumn {
                get {
                    return this.columnunassigned_uom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bomRow this[int index] {
                get {
                    return ((report_process_bomRow)(this.Rows[index]));
                }
            }
            
            public event report_process_bomRowChangeEventHandler report_process_bomRowChanging;
            
            public event report_process_bomRowChangeEventHandler report_process_bomRowChanged;
            
            public event report_process_bomRowChangeEventHandler report_process_bomRowDeleting;
            
            public event report_process_bomRowChangeEventHandler report_process_bomRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addreport_process_bomRow(report_process_bomRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bomRow Addreport_process_bomRow(string position_id, string sub_position_id, string step, string recipe, string source_type, string ingredient_id, string ingredient_name, string quantity, string uom, string input_order, string unassigned_quantity, string assigned_quantity, string alert_quantity, string ifalert, string unassigned_uom) {
                report_process_bomRow rowreport_process_bomRow = ((report_process_bomRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        position_id,
                        sub_position_id,
                        step,
                        recipe,
                        source_type,
                        ingredient_id,
                        ingredient_name,
                        quantity,
                        uom,
                        input_order,
                        unassigned_quantity,
                        assigned_quantity,
                        alert_quantity,
                        ifalert,
                        unassigned_uom};
                rowreport_process_bomRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreport_process_bomRow);
                return rowreport_process_bomRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                report_process_bomDataTable cln = ((report_process_bomDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new report_process_bomDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnposition_id = base.Columns["position_id"];
                this.columnsub_position_id = base.Columns["sub_position_id"];
                this.columnstep = base.Columns["step"];
                this.columnrecipe = base.Columns["recipe"];
                this.columnsource_type = base.Columns["source_type"];
                this.columningredient_id = base.Columns["ingredient_id"];
                this.columningredient_name = base.Columns["ingredient_name"];
                this.columnquantity = base.Columns["quantity"];
                this.columnuom = base.Columns["uom"];
                this.columninput_order = base.Columns["input_order"];
                this.columnunassigned_quantity = base.Columns["unassigned_quantity"];
                this.columnassigned_quantity = base.Columns["assigned_quantity"];
                this.columnalert_quantity = base.Columns["alert_quantity"];
                this.columnifalert = base.Columns["ifalert"];
                this.columnunassigned_uom = base.Columns["unassigned_uom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnposition_id = new global::System.Data.DataColumn("position_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition_id);
                this.columnsub_position_id = new global::System.Data.DataColumn("sub_position_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsub_position_id);
                this.columnstep = new global::System.Data.DataColumn("step", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstep);
                this.columnrecipe = new global::System.Data.DataColumn("recipe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecipe);
                this.columnsource_type = new global::System.Data.DataColumn("source_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsource_type);
                this.columningredient_id = new global::System.Data.DataColumn("ingredient_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columningredient_id);
                this.columningredient_name = new global::System.Data.DataColumn("ingredient_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columningredient_name);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columnuom = new global::System.Data.DataColumn("uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
                this.columninput_order = new global::System.Data.DataColumn("input_order", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninput_order);
                this.columnunassigned_quantity = new global::System.Data.DataColumn("unassigned_quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunassigned_quantity);
                this.columnassigned_quantity = new global::System.Data.DataColumn("assigned_quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassigned_quantity);
                this.columnalert_quantity = new global::System.Data.DataColumn("alert_quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalert_quantity);
                this.columnifalert = new global::System.Data.DataColumn("ifalert", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnifalert);
                this.columnunassigned_uom = new global::System.Data.DataColumn("unassigned_uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunassigned_uom);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bomRow Newreport_process_bomRow() {
                return ((report_process_bomRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new report_process_bomRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(report_process_bomRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.report_process_bomRowChanged != null)) {
                    this.report_process_bomRowChanged(this, new report_process_bomRowChangeEvent(((report_process_bomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.report_process_bomRowChanging != null)) {
                    this.report_process_bomRowChanging(this, new report_process_bomRowChangeEvent(((report_process_bomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.report_process_bomRowDeleted != null)) {
                    this.report_process_bomRowDeleted(this, new report_process_bomRowChangeEvent(((report_process_bomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.report_process_bomRowDeleting != null)) {
                    this.report_process_bomRowDeleting(this, new report_process_bomRowChangeEvent(((report_process_bomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removereport_process_bomRow(report_process_bomRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "report_process_bomDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class report_process_bom_totalDataTable : global::System.Data.TypedTableBase<report_process_bom_totalRow> {
            
            private global::System.Data.DataColumn columnsource_type;
            
            private global::System.Data.DataColumn columningredient_id;
            
            private global::System.Data.DataColumn columningredient_name;
            
            private global::System.Data.DataColumn columnquantity;
            
            private global::System.Data.DataColumn columnuom;
            
            private global::System.Data.DataColumn columnunassigned_quantity;
            
            private global::System.Data.DataColumn columnassigned_quantity_show;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnalert_quantity;
            
            private global::System.Data.DataColumn columnifalert;
            
            private global::System.Data.DataColumn columnunassigned_uom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bom_totalDataTable() {
                this.TableName = "report_process_bom_total";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_process_bom_totalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected report_process_bom_totalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn source_typeColumn {
                get {
                    return this.columnsource_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ingredient_idColumn {
                get {
                    return this.columningredient_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ingredient_nameColumn {
                get {
                    return this.columningredient_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unassigned_quantityColumn {
                get {
                    return this.columnunassigned_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assigned_quantity_showColumn {
                get {
                    return this.columnassigned_quantity_show;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alert_quantityColumn {
                get {
                    return this.columnalert_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ifalertColumn {
                get {
                    return this.columnifalert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unassigned_uomColumn {
                get {
                    return this.columnunassigned_uom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bom_totalRow this[int index] {
                get {
                    return ((report_process_bom_totalRow)(this.Rows[index]));
                }
            }
            
            public event report_process_bom_totalRowChangeEventHandler report_process_bom_totalRowChanging;
            
            public event report_process_bom_totalRowChangeEventHandler report_process_bom_totalRowChanged;
            
            public event report_process_bom_totalRowChangeEventHandler report_process_bom_totalRowDeleting;
            
            public event report_process_bom_totalRowChangeEventHandler report_process_bom_totalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addreport_process_bom_totalRow(report_process_bom_totalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bom_totalRow Addreport_process_bom_totalRow(string source_type, string ingredient_id, string ingredient_name, string quantity, string uom, string unassigned_quantity, string assigned_quantity_show, string Description, string alert_quantity, string ifalert, string unassigned_uom) {
                report_process_bom_totalRow rowreport_process_bom_totalRow = ((report_process_bom_totalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        source_type,
                        ingredient_id,
                        ingredient_name,
                        quantity,
                        uom,
                        unassigned_quantity,
                        assigned_quantity_show,
                        Description,
                        alert_quantity,
                        ifalert,
                        unassigned_uom};
                rowreport_process_bom_totalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreport_process_bom_totalRow);
                return rowreport_process_bom_totalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                report_process_bom_totalDataTable cln = ((report_process_bom_totalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new report_process_bom_totalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsource_type = base.Columns["source_type"];
                this.columningredient_id = base.Columns["ingredient_id"];
                this.columningredient_name = base.Columns["ingredient_name"];
                this.columnquantity = base.Columns["quantity"];
                this.columnuom = base.Columns["uom"];
                this.columnunassigned_quantity = base.Columns["unassigned_quantity"];
                this.columnassigned_quantity_show = base.Columns["assigned_quantity_show"];
                this.columnDescription = base.Columns["Description"];
                this.columnalert_quantity = base.Columns["alert_quantity"];
                this.columnifalert = base.Columns["ifalert"];
                this.columnunassigned_uom = base.Columns["unassigned_uom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsource_type = new global::System.Data.DataColumn("source_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsource_type);
                this.columningredient_id = new global::System.Data.DataColumn("ingredient_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columningredient_id);
                this.columningredient_name = new global::System.Data.DataColumn("ingredient_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columningredient_name);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columnuom = new global::System.Data.DataColumn("uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
                this.columnunassigned_quantity = new global::System.Data.DataColumn("unassigned_quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunassigned_quantity);
                this.columnassigned_quantity_show = new global::System.Data.DataColumn("assigned_quantity_show", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassigned_quantity_show);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnalert_quantity = new global::System.Data.DataColumn("alert_quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalert_quantity);
                this.columnifalert = new global::System.Data.DataColumn("ifalert", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnifalert);
                this.columnunassigned_uom = new global::System.Data.DataColumn("unassigned_uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunassigned_uom);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bom_totalRow Newreport_process_bom_totalRow() {
                return ((report_process_bom_totalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new report_process_bom_totalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(report_process_bom_totalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.report_process_bom_totalRowChanged != null)) {
                    this.report_process_bom_totalRowChanged(this, new report_process_bom_totalRowChangeEvent(((report_process_bom_totalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.report_process_bom_totalRowChanging != null)) {
                    this.report_process_bom_totalRowChanging(this, new report_process_bom_totalRowChangeEvent(((report_process_bom_totalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.report_process_bom_totalRowDeleted != null)) {
                    this.report_process_bom_totalRowDeleted(this, new report_process_bom_totalRowChangeEvent(((report_process_bom_totalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.report_process_bom_totalRowDeleting != null)) {
                    this.report_process_bom_totalRowDeleting(this, new report_process_bom_totalRowChangeEvent(((report_process_bom_totalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removereport_process_bom_totalRow(report_process_bom_totalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "report_process_bom_totalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class select_step_detailsDataTable : global::System.Data.TypedTableBase<select_step_detailsRow> {
            
            private global::System.Data.DataColumn columnstep_name;
            
            private global::System.Data.DataColumn columnstep_type_id;
            
            private global::System.Data.DataColumn columnstep_type_name;
            
            private global::System.Data.DataColumn columnversion;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columneq_usage;
            
            private global::System.Data.DataColumn columneq_name;
            
            private global::System.Data.DataColumn columnemp_usage;
            
            private global::System.Data.DataColumn columnemp_id;
            
            private global::System.Data.DataColumn columnemp_name;
            
            private global::System.Data.DataColumn columnrecipe_id;
            
            private global::System.Data.DataColumn columnmintime;
            
            private global::System.Data.DataColumn columnmaxtime;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnstep_comment;
            
            private global::System.Data.DataColumn columnpara1;
            
            private global::System.Data.DataColumn columnpara2;
            
            private global::System.Data.DataColumn columnpara3;
            
            private global::System.Data.DataColumn columnpara4;
            
            private global::System.Data.DataColumn columnpara5;
            
            private global::System.Data.DataColumn columnpara6;
            
            private global::System.Data.DataColumn columnpara7;
            
            private global::System.Data.DataColumn columnpara8;
            
            private global::System.Data.DataColumn columnpara9;
            
            private global::System.Data.DataColumn columnpara10;
            
            private global::System.Data.DataColumn columnrecipe_name;
            
            private global::System.Data.DataColumn columnexec_method;
            
            private global::System.Data.DataColumn columncontact_employee;
            
            private global::System.Data.DataColumn columncontact_employee_name;
            
            private global::System.Data.DataColumn columninstruction;
            
            private global::System.Data.DataColumn columndiagram_filename;
            
            private global::System.Data.DataColumn columnrecipe_comment;
            
            private global::System.Data.DataColumn columneq_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public select_step_detailsDataTable() {
                this.TableName = "select_step_details";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal select_step_detailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected select_step_detailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn step_nameColumn {
                get {
                    return this.columnstep_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn step_type_idColumn {
                get {
                    return this.columnstep_type_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn step_type_nameColumn {
                get {
                    return this.columnstep_type_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn versionColumn {
                get {
                    return this.columnversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eq_usageColumn {
                get {
                    return this.columneq_usage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eq_nameColumn {
                get {
                    return this.columneq_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emp_usageColumn {
                get {
                    return this.columnemp_usage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emp_idColumn {
                get {
                    return this.columnemp_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emp_nameColumn {
                get {
                    return this.columnemp_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recipe_idColumn {
                get {
                    return this.columnrecipe_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mintimeColumn {
                get {
                    return this.columnmintime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maxtimeColumn {
                get {
                    return this.columnmaxtime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn step_commentColumn {
                get {
                    return this.columnstep_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn para1Column {
                get {
                    return this.columnpara1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn para2Column {
                get {
                    return this.columnpara2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn para3Column {
                get {
                    return this.columnpara3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn para4Column {
                get {
                    return this.columnpara4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn para5Column {
                get {
                    return this.columnpara5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn para6Column {
                get {
                    return this.columnpara6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn para7Column {
                get {
                    return this.columnpara7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn para8Column {
                get {
                    return this.columnpara8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn para9Column {
                get {
                    return this.columnpara9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn para10Column {
                get {
                    return this.columnpara10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recipe_nameColumn {
                get {
                    return this.columnrecipe_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn exec_methodColumn {
                get {
                    return this.columnexec_method;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contact_employeeColumn {
                get {
                    return this.columncontact_employee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contact_employee_nameColumn {
                get {
                    return this.columncontact_employee_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn instructionColumn {
                get {
                    return this.columninstruction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn diagram_filenameColumn {
                get {
                    return this.columndiagram_filename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recipe_commentColumn {
                get {
                    return this.columnrecipe_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eq_idColumn {
                get {
                    return this.columneq_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public select_step_detailsRow this[int index] {
                get {
                    return ((select_step_detailsRow)(this.Rows[index]));
                }
            }
            
            public event select_step_detailsRowChangeEventHandler select_step_detailsRowChanging;
            
            public event select_step_detailsRowChangeEventHandler select_step_detailsRowChanged;
            
            public event select_step_detailsRowChangeEventHandler select_step_detailsRowDeleting;
            
            public event select_step_detailsRowChangeEventHandler select_step_detailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addselect_step_detailsRow(select_step_detailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public select_step_detailsRow Addselect_step_detailsRow(
                        string step_name, 
                        string step_type_id, 
                        string step_type_name, 
                        string version, 
                        string state, 
                        string eq_usage, 
                        string eq_name, 
                        string emp_usage, 
                        string emp_id, 
                        string emp_name, 
                        string recipe_id, 
                        string mintime, 
                        string maxtime, 
                        string description, 
                        string step_comment, 
                        string para1, 
                        string para2, 
                        string para3, 
                        string para4, 
                        string para5, 
                        string para6, 
                        string para7, 
                        string para8, 
                        string para9, 
                        string para10, 
                        string recipe_name, 
                        string exec_method, 
                        string contact_employee, 
                        string contact_employee_name, 
                        string instruction, 
                        string diagram_filename, 
                        string recipe_comment, 
                        string eq_id) {
                select_step_detailsRow rowselect_step_detailsRow = ((select_step_detailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        step_name,
                        step_type_id,
                        step_type_name,
                        version,
                        state,
                        eq_usage,
                        eq_name,
                        emp_usage,
                        emp_id,
                        emp_name,
                        recipe_id,
                        mintime,
                        maxtime,
                        description,
                        step_comment,
                        para1,
                        para2,
                        para3,
                        para4,
                        para5,
                        para6,
                        para7,
                        para8,
                        para9,
                        para10,
                        recipe_name,
                        exec_method,
                        contact_employee,
                        contact_employee_name,
                        instruction,
                        diagram_filename,
                        recipe_comment,
                        eq_id};
                rowselect_step_detailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowselect_step_detailsRow);
                return rowselect_step_detailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                select_step_detailsDataTable cln = ((select_step_detailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new select_step_detailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstep_name = base.Columns["step_name"];
                this.columnstep_type_id = base.Columns["step_type_id"];
                this.columnstep_type_name = base.Columns["step_type_name"];
                this.columnversion = base.Columns["version"];
                this.columnstate = base.Columns["state"];
                this.columneq_usage = base.Columns["eq_usage"];
                this.columneq_name = base.Columns["eq_name"];
                this.columnemp_usage = base.Columns["emp_usage"];
                this.columnemp_id = base.Columns["emp_id"];
                this.columnemp_name = base.Columns["emp_name"];
                this.columnrecipe_id = base.Columns["recipe_id"];
                this.columnmintime = base.Columns["mintime"];
                this.columnmaxtime = base.Columns["maxtime"];
                this.columndescription = base.Columns["description"];
                this.columnstep_comment = base.Columns["step_comment"];
                this.columnpara1 = base.Columns["para1"];
                this.columnpara2 = base.Columns["para2"];
                this.columnpara3 = base.Columns["para3"];
                this.columnpara4 = base.Columns["para4"];
                this.columnpara5 = base.Columns["para5"];
                this.columnpara6 = base.Columns["para6"];
                this.columnpara7 = base.Columns["para7"];
                this.columnpara8 = base.Columns["para8"];
                this.columnpara9 = base.Columns["para9"];
                this.columnpara10 = base.Columns["para10"];
                this.columnrecipe_name = base.Columns["recipe_name"];
                this.columnexec_method = base.Columns["exec_method"];
                this.columncontact_employee = base.Columns["contact_employee"];
                this.columncontact_employee_name = base.Columns["contact_employee_name"];
                this.columninstruction = base.Columns["instruction"];
                this.columndiagram_filename = base.Columns["diagram_filename"];
                this.columnrecipe_comment = base.Columns["recipe_comment"];
                this.columneq_id = base.Columns["eq_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstep_name = new global::System.Data.DataColumn("step_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstep_name);
                this.columnstep_type_id = new global::System.Data.DataColumn("step_type_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstep_type_id);
                this.columnstep_type_name = new global::System.Data.DataColumn("step_type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstep_type_name);
                this.columnversion = new global::System.Data.DataColumn("version", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnversion);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columneq_usage = new global::System.Data.DataColumn("eq_usage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneq_usage);
                this.columneq_name = new global::System.Data.DataColumn("eq_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneq_name);
                this.columnemp_usage = new global::System.Data.DataColumn("emp_usage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemp_usage);
                this.columnemp_id = new global::System.Data.DataColumn("emp_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemp_id);
                this.columnemp_name = new global::System.Data.DataColumn("emp_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemp_name);
                this.columnrecipe_id = new global::System.Data.DataColumn("recipe_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecipe_id);
                this.columnmintime = new global::System.Data.DataColumn("mintime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmintime);
                this.columnmaxtime = new global::System.Data.DataColumn("maxtime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaxtime);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnstep_comment = new global::System.Data.DataColumn("step_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstep_comment);
                this.columnpara1 = new global::System.Data.DataColumn("para1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpara1);
                this.columnpara2 = new global::System.Data.DataColumn("para2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpara2);
                this.columnpara3 = new global::System.Data.DataColumn("para3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpara3);
                this.columnpara4 = new global::System.Data.DataColumn("para4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpara4);
                this.columnpara5 = new global::System.Data.DataColumn("para5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpara5);
                this.columnpara6 = new global::System.Data.DataColumn("para6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpara6);
                this.columnpara7 = new global::System.Data.DataColumn("para7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpara7);
                this.columnpara8 = new global::System.Data.DataColumn("para8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpara8);
                this.columnpara9 = new global::System.Data.DataColumn("para9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpara9);
                this.columnpara10 = new global::System.Data.DataColumn("para10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpara10);
                this.columnrecipe_name = new global::System.Data.DataColumn("recipe_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecipe_name);
                this.columnexec_method = new global::System.Data.DataColumn("exec_method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexec_method);
                this.columncontact_employee = new global::System.Data.DataColumn("contact_employee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact_employee);
                this.columncontact_employee_name = new global::System.Data.DataColumn("contact_employee_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact_employee_name);
                this.columninstruction = new global::System.Data.DataColumn("instruction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninstruction);
                this.columndiagram_filename = new global::System.Data.DataColumn("diagram_filename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiagram_filename);
                this.columnrecipe_comment = new global::System.Data.DataColumn("recipe_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecipe_comment);
                this.columneq_id = new global::System.Data.DataColumn("eq_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneq_id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public select_step_detailsRow Newselect_step_detailsRow() {
                return ((select_step_detailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new select_step_detailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(select_step_detailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.select_step_detailsRowChanged != null)) {
                    this.select_step_detailsRowChanged(this, new select_step_detailsRowChangeEvent(((select_step_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.select_step_detailsRowChanging != null)) {
                    this.select_step_detailsRowChanging(this, new select_step_detailsRowChangeEvent(((select_step_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.select_step_detailsRowDeleted != null)) {
                    this.select_step_detailsRowDeleted(this, new select_step_detailsRowChangeEvent(((select_step_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.select_step_detailsRowDeleting != null)) {
                    this.select_step_detailsRowDeleting(this, new select_step_detailsRowChangeEvent(((select_step_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeselect_step_detailsRow(select_step_detailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "select_step_detailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class report_dispatch_historyDataTable : global::System.Data.TypedTableBase<report_dispatch_historyRow> {
            
            private global::System.Data.DataColumn columnlot_id;
            
            private global::System.Data.DataColumn columnlot_alias;
            
            private global::System.Data.DataColumn columnponumber;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnprocess_name;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columnstart_quantity;
            
            private global::System.Data.DataColumn columnactual_quantity;
            
            private global::System.Data.DataColumn columnuom;
            
            private global::System.Data.DataColumn columndispatch_time;
            
            private global::System.Data.DataColumn columndispatcher;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnprioirty;
            
            private global::System.Data.DataColumn columncurstatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_dispatch_historyDataTable() {
                this.TableName = "report_dispatch_history";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_dispatch_historyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected report_dispatch_historyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lot_idColumn {
                get {
                    return this.columnlot_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lot_aliasColumn {
                get {
                    return this.columnlot_alias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ponumberColumn {
                get {
                    return this.columnponumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn process_nameColumn {
                get {
                    return this.columnprocess_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_quantityColumn {
                get {
                    return this.columnstart_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn actual_quantityColumn {
                get {
                    return this.columnactual_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dispatch_timeColumn {
                get {
                    return this.columndispatch_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dispatcherColumn {
                get {
                    return this.columndispatcher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prioirtyColumn {
                get {
                    return this.columnprioirty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn curstatusColumn {
                get {
                    return this.columncurstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_dispatch_historyRow this[int index] {
                get {
                    return ((report_dispatch_historyRow)(this.Rows[index]));
                }
            }
            
            public event report_dispatch_historyRowChangeEventHandler report_dispatch_historyRowChanging;
            
            public event report_dispatch_historyRowChangeEventHandler report_dispatch_historyRowChanged;
            
            public event report_dispatch_historyRowChangeEventHandler report_dispatch_historyRowDeleting;
            
            public event report_dispatch_historyRowChangeEventHandler report_dispatch_historyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addreport_dispatch_historyRow(report_dispatch_historyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_dispatch_historyRow Addreport_dispatch_historyRow(string lot_id, string lot_alias, string ponumber, string product_name, string process_name, string state, string start_quantity, string actual_quantity, string uom, string dispatch_time, string dispatcher, string contact, string prioirty, string curstatus) {
                report_dispatch_historyRow rowreport_dispatch_historyRow = ((report_dispatch_historyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        lot_id,
                        lot_alias,
                        ponumber,
                        product_name,
                        process_name,
                        state,
                        start_quantity,
                        actual_quantity,
                        uom,
                        dispatch_time,
                        dispatcher,
                        contact,
                        prioirty,
                        curstatus};
                rowreport_dispatch_historyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreport_dispatch_historyRow);
                return rowreport_dispatch_historyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                report_dispatch_historyDataTable cln = ((report_dispatch_historyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new report_dispatch_historyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnlot_id = base.Columns["lot_id"];
                this.columnlot_alias = base.Columns["lot_alias"];
                this.columnponumber = base.Columns["ponumber"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnprocess_name = base.Columns["process_name"];
                this.columnstate = base.Columns["state"];
                this.columnstart_quantity = base.Columns["start_quantity"];
                this.columnactual_quantity = base.Columns["actual_quantity"];
                this.columnuom = base.Columns["uom"];
                this.columndispatch_time = base.Columns["dispatch_time"];
                this.columndispatcher = base.Columns["dispatcher"];
                this.columncontact = base.Columns["contact"];
                this.columnprioirty = base.Columns["prioirty"];
                this.columncurstatus = base.Columns["curstatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnlot_id = new global::System.Data.DataColumn("lot_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlot_id);
                this.columnlot_alias = new global::System.Data.DataColumn("lot_alias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlot_alias);
                this.columnponumber = new global::System.Data.DataColumn("ponumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnponumber);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnprocess_name = new global::System.Data.DataColumn("process_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprocess_name);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columnstart_quantity = new global::System.Data.DataColumn("start_quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_quantity);
                this.columnactual_quantity = new global::System.Data.DataColumn("actual_quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactual_quantity);
                this.columnuom = new global::System.Data.DataColumn("uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
                this.columndispatch_time = new global::System.Data.DataColumn("dispatch_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndispatch_time);
                this.columndispatcher = new global::System.Data.DataColumn("dispatcher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndispatcher);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnprioirty = new global::System.Data.DataColumn("prioirty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprioirty);
                this.columncurstatus = new global::System.Data.DataColumn("curstatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurstatus);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_dispatch_historyRow Newreport_dispatch_historyRow() {
                return ((report_dispatch_historyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new report_dispatch_historyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(report_dispatch_historyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.report_dispatch_historyRowChanged != null)) {
                    this.report_dispatch_historyRowChanged(this, new report_dispatch_historyRowChangeEvent(((report_dispatch_historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.report_dispatch_historyRowChanging != null)) {
                    this.report_dispatch_historyRowChanging(this, new report_dispatch_historyRowChangeEvent(((report_dispatch_historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.report_dispatch_historyRowDeleted != null)) {
                    this.report_dispatch_historyRowDeleted(this, new report_dispatch_historyRowChangeEvent(((report_dispatch_historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.report_dispatch_historyRowDeleting != null)) {
                    this.report_dispatch_historyRowDeleting(this, new report_dispatch_historyRowChangeEvent(((report_dispatch_historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removereport_dispatch_historyRow(report_dispatch_historyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "report_dispatch_historyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class report_product_in_processDataTable : global::System.Data.TypedTableBase<report_product_in_processRow> {
            
            private global::System.Data.DataColumn columnlot_id;
            
            private global::System.Data.DataColumn columnlot_alias;
            
            private global::System.Data.DataColumn columnponumber;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnprocess_name;
            
            private global::System.Data.DataColumn columnlot_status;
            
            private global::System.Data.DataColumn columnstart_quantity;
            
            private global::System.Data.DataColumn columnactual_quantity;
            
            private global::System.Data.DataColumn columnuom;
            
            private global::System.Data.DataColumn columndispatch_time;
            
            private global::System.Data.DataColumn columndispatcher;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnpriority;
            
            private global::System.Data.DataColumn columnstep_name;
            
            private global::System.Data.DataColumn columnstep_status;
            
            private global::System.Data.DataColumn columnlast_step_starttime;
            
            private global::System.Data.DataColumn columnbatch_link;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_product_in_processDataTable() {
                this.TableName = "report_product_in_process";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_product_in_processDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected report_product_in_processDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lot_idColumn {
                get {
                    return this.columnlot_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lot_aliasColumn {
                get {
                    return this.columnlot_alias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ponumberColumn {
                get {
                    return this.columnponumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn process_nameColumn {
                get {
                    return this.columnprocess_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lot_statusColumn {
                get {
                    return this.columnlot_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_quantityColumn {
                get {
                    return this.columnstart_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn actual_quantityColumn {
                get {
                    return this.columnactual_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dispatch_timeColumn {
                get {
                    return this.columndispatch_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dispatcherColumn {
                get {
                    return this.columndispatcher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priorityColumn {
                get {
                    return this.columnpriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn step_nameColumn {
                get {
                    return this.columnstep_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn step_statusColumn {
                get {
                    return this.columnstep_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn last_step_starttimeColumn {
                get {
                    return this.columnlast_step_starttime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn batch_linkColumn {
                get {
                    return this.columnbatch_link;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_product_in_processRow this[int index] {
                get {
                    return ((report_product_in_processRow)(this.Rows[index]));
                }
            }
            
            public event report_product_in_processRowChangeEventHandler report_product_in_processRowChanging;
            
            public event report_product_in_processRowChangeEventHandler report_product_in_processRowChanged;
            
            public event report_product_in_processRowChangeEventHandler report_product_in_processRowDeleting;
            
            public event report_product_in_processRowChangeEventHandler report_product_in_processRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addreport_product_in_processRow(report_product_in_processRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_product_in_processRow Addreport_product_in_processRow(
                        string lot_id, 
                        string lot_alias, 
                        string ponumber, 
                        string product_name, 
                        string process_name, 
                        string lot_status, 
                        string start_quantity, 
                        string actual_quantity, 
                        string uom, 
                        string dispatch_time, 
                        string dispatcher, 
                        string contact, 
                        string priority, 
                        string step_name, 
                        string step_status, 
                        string last_step_starttime, 
                        string batch_link) {
                report_product_in_processRow rowreport_product_in_processRow = ((report_product_in_processRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        lot_id,
                        lot_alias,
                        ponumber,
                        product_name,
                        process_name,
                        lot_status,
                        start_quantity,
                        actual_quantity,
                        uom,
                        dispatch_time,
                        dispatcher,
                        contact,
                        priority,
                        step_name,
                        step_status,
                        last_step_starttime,
                        batch_link};
                rowreport_product_in_processRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreport_product_in_processRow);
                return rowreport_product_in_processRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                report_product_in_processDataTable cln = ((report_product_in_processDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new report_product_in_processDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnlot_id = base.Columns["lot_id"];
                this.columnlot_alias = base.Columns["lot_alias"];
                this.columnponumber = base.Columns["ponumber"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnprocess_name = base.Columns["process_name"];
                this.columnlot_status = base.Columns["lot_status"];
                this.columnstart_quantity = base.Columns["start_quantity"];
                this.columnactual_quantity = base.Columns["actual_quantity"];
                this.columnuom = base.Columns["uom"];
                this.columndispatch_time = base.Columns["dispatch_time"];
                this.columndispatcher = base.Columns["dispatcher"];
                this.columncontact = base.Columns["contact"];
                this.columnpriority = base.Columns["priority"];
                this.columnstep_name = base.Columns["step_name"];
                this.columnstep_status = base.Columns["step_status"];
                this.columnlast_step_starttime = base.Columns["last_step_starttime"];
                this.columnbatch_link = base.Columns["batch_link"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnlot_id = new global::System.Data.DataColumn("lot_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlot_id);
                this.columnlot_alias = new global::System.Data.DataColumn("lot_alias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlot_alias);
                this.columnponumber = new global::System.Data.DataColumn("ponumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnponumber);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnprocess_name = new global::System.Data.DataColumn("process_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprocess_name);
                this.columnlot_status = new global::System.Data.DataColumn("lot_status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlot_status);
                this.columnstart_quantity = new global::System.Data.DataColumn("start_quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_quantity);
                this.columnactual_quantity = new global::System.Data.DataColumn("actual_quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactual_quantity);
                this.columnuom = new global::System.Data.DataColumn("uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
                this.columndispatch_time = new global::System.Data.DataColumn("dispatch_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndispatch_time);
                this.columndispatcher = new global::System.Data.DataColumn("dispatcher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndispatcher);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnpriority = new global::System.Data.DataColumn("priority", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriority);
                this.columnstep_name = new global::System.Data.DataColumn("step_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstep_name);
                this.columnstep_status = new global::System.Data.DataColumn("step_status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstep_status);
                this.columnlast_step_starttime = new global::System.Data.DataColumn("last_step_starttime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_step_starttime);
                this.columnbatch_link = new global::System.Data.DataColumn("batch_link", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbatch_link);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_product_in_processRow Newreport_product_in_processRow() {
                return ((report_product_in_processRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new report_product_in_processRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(report_product_in_processRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.report_product_in_processRowChanged != null)) {
                    this.report_product_in_processRowChanged(this, new report_product_in_processRowChangeEvent(((report_product_in_processRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.report_product_in_processRowChanging != null)) {
                    this.report_product_in_processRowChanging(this, new report_product_in_processRowChangeEvent(((report_product_in_processRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.report_product_in_processRowDeleted != null)) {
                    this.report_product_in_processRowDeleted(this, new report_product_in_processRowChangeEvent(((report_product_in_processRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.report_product_in_processRowDeleting != null)) {
                    this.report_product_in_processRowDeleting(this, new report_product_in_processRowChangeEvent(((report_product_in_processRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removereport_product_in_processRow(report_product_in_processRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "report_product_in_processDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class report_order_quantityDataTable : global::System.Data.TypedTableBase<report_order_quantityRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnorder_type;
            
            private global::System.Data.DataColumn columnclient_name;
            
            private global::System.Data.DataColumn columnponumber;
            
            private global::System.Data.DataColumn columnorder_date;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnquantity_made;
            
            private global::System.Data.DataColumn columnquantity_in_process;
            
            private global::System.Data.DataColumn columnquantity_shipped;
            
            private global::System.Data.DataColumn columnquantity_requested;
            
            private global::System.Data.DataColumn columnuom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_order_quantityDataTable() {
                this.TableName = "report_order_quantity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_order_quantityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected report_order_quantityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn order_typeColumn {
                get {
                    return this.columnorder_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn client_nameColumn {
                get {
                    return this.columnclient_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ponumberColumn {
                get {
                    return this.columnponumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn order_dateColumn {
                get {
                    return this.columnorder_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_madeColumn {
                get {
                    return this.columnquantity_made;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_in_processColumn {
                get {
                    return this.columnquantity_in_process;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_shippedColumn {
                get {
                    return this.columnquantity_shipped;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantity_requestedColumn {
                get {
                    return this.columnquantity_requested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_order_quantityRow this[int index] {
                get {
                    return ((report_order_quantityRow)(this.Rows[index]));
                }
            }
            
            public event report_order_quantityRowChangeEventHandler report_order_quantityRowChanging;
            
            public event report_order_quantityRowChangeEventHandler report_order_quantityRowChanged;
            
            public event report_order_quantityRowChangeEventHandler report_order_quantityRowDeleting;
            
            public event report_order_quantityRowChangeEventHandler report_order_quantityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addreport_order_quantityRow(report_order_quantityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_order_quantityRow Addreport_order_quantityRow(string id, string order_type, string client_name, string ponumber, string order_date, string product_id, string product_name, string quantity_made, string quantity_in_process, string quantity_shipped, string quantity_requested, string uom) {
                report_order_quantityRow rowreport_order_quantityRow = ((report_order_quantityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        order_type,
                        client_name,
                        ponumber,
                        order_date,
                        product_id,
                        product_name,
                        quantity_made,
                        quantity_in_process,
                        quantity_shipped,
                        quantity_requested,
                        uom};
                rowreport_order_quantityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreport_order_quantityRow);
                return rowreport_order_quantityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                report_order_quantityDataTable cln = ((report_order_quantityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new report_order_quantityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnorder_type = base.Columns["order_type"];
                this.columnclient_name = base.Columns["client_name"];
                this.columnponumber = base.Columns["ponumber"];
                this.columnorder_date = base.Columns["order_date"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnquantity_made = base.Columns["quantity_made"];
                this.columnquantity_in_process = base.Columns["quantity_in_process"];
                this.columnquantity_shipped = base.Columns["quantity_shipped"];
                this.columnquantity_requested = base.Columns["quantity_requested"];
                this.columnuom = base.Columns["uom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnorder_type = new global::System.Data.DataColumn("order_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_type);
                this.columnclient_name = new global::System.Data.DataColumn("client_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclient_name);
                this.columnponumber = new global::System.Data.DataColumn("ponumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnponumber);
                this.columnorder_date = new global::System.Data.DataColumn("order_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_date);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnquantity_made = new global::System.Data.DataColumn("quantity_made", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_made);
                this.columnquantity_in_process = new global::System.Data.DataColumn("quantity_in_process", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_in_process);
                this.columnquantity_shipped = new global::System.Data.DataColumn("quantity_shipped", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_shipped);
                this.columnquantity_requested = new global::System.Data.DataColumn("quantity_requested", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity_requested);
                this.columnuom = new global::System.Data.DataColumn("uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_order_quantityRow Newreport_order_quantityRow() {
                return ((report_order_quantityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new report_order_quantityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(report_order_quantityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.report_order_quantityRowChanged != null)) {
                    this.report_order_quantityRowChanged(this, new report_order_quantityRowChangeEvent(((report_order_quantityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.report_order_quantityRowChanging != null)) {
                    this.report_order_quantityRowChanging(this, new report_order_quantityRowChangeEvent(((report_order_quantityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.report_order_quantityRowDeleted != null)) {
                    this.report_order_quantityRowDeleted(this, new report_order_quantityRowChangeEvent(((report_order_quantityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.report_order_quantityRowDeleting != null)) {
                    this.report_order_quantityRowDeleting(this, new report_order_quantityRowChangeEvent(((report_order_quantityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removereport_order_quantityRow(report_order_quantityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "report_order_quantityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint id {
                get {
                    return ((uint)(this[this.tableDataTable1.idColumn]));
                }
                set {
                    this[this.tableDataTable1.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string order_type {
                get {
                    return ((string)(this[this.tableDataTable1.order_typeColumn]));
                }
                set {
                    this[this.tableDataTable1.order_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string client_name {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.client_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'client_name\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.client_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ponumber {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.ponumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ponumber\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.ponumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime order_date {
                get {
                    return ((global::System.DateTime)(this[this.tableDataTable1.order_dateColumn]));
                }
                set {
                    this[this.tableDataTable1.order_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity_made {
                get {
                    return ((decimal)(this[this.tableDataTable1.quantity_madeColumn]));
                }
                set {
                    this[this.tableDataTable1.quantity_madeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity_in_process {
                get {
                    return ((decimal)(this[this.tableDataTable1.quantity_in_processColumn]));
                }
                set {
                    this[this.tableDataTable1.quantity_in_processColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity_shipped {
                get {
                    return ((decimal)(this[this.tableDataTable1.quantity_shippedColumn]));
                }
                set {
                    this[this.tableDataTable1.quantity_shippedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity_requested {
                get {
                    return ((decimal)(this[this.tableDataTable1.quantity_requestedColumn]));
                }
                set {
                    this[this.tableDataTable1.quantity_requestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    return ((string)(this[this.tableDataTable1.uomColumn]));
                }
                set {
                    this[this.tableDataTable1.uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isclient_nameNull() {
                return this.IsNull(this.tableDataTable1.client_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setclient_nameNull() {
                this[this.tableDataTable1.client_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsponumberNull() {
                return this.IsNull(this.tableDataTable1.ponumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetponumberNull() {
                this[this.tableDataTable1.ponumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class report_process_cycletimeRow : global::System.Data.DataRow {
            
            private report_process_cycletimeDataTable tablereport_process_cycletime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_process_cycletimeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereport_process_cycletime = ((report_process_cycletimeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string position_id {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.position_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'position_id\' in table \'report_process_cycletime\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.position_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sub_position_id {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.sub_position_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sub_position_id\' in table \'report_process_cycletime\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.sub_position_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string step {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.stepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'step\' in table \'report_process_cycletime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.stepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string step_type {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.step_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'step_type\' in table \'report_process_cycletime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.step_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string min_time {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.min_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'min_time\' in table \'report_process_cycletime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.min_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string max_time {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.max_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'max_time\' in table \'report_process_cycletime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.max_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string average_time {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.average_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'average_time\' in table \'report_process_cycletime\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.average_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string prev_step_pos {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.prev_step_posColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prev_step_pos\' in table \'report_process_cycletime\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.prev_step_posColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string next_step_pos {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.next_step_posColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'next_step_pos\' in table \'report_process_cycletime\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.next_step_posColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string false_step_pos {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.false_step_posColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'false_step_pos\' in table \'report_process_cycletime\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.false_step_posColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rework_limit {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.rework_limitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rework_limit\' in table \'report_process_cycletime\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.rework_limitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description\' in table \'report_process_cycletime\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string average_yield {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_cycletime.average_yieldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'average_yield\' in table \'report_process_cycletime\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablereport_process_cycletime.average_yieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isposition_idNull() {
                return this.IsNull(this.tablereport_process_cycletime.position_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setposition_idNull() {
                this[this.tablereport_process_cycletime.position_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issub_position_idNull() {
                return this.IsNull(this.tablereport_process_cycletime.sub_position_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsub_position_idNull() {
                this[this.tablereport_process_cycletime.sub_position_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstepNull() {
                return this.IsNull(this.tablereport_process_cycletime.stepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstepNull() {
                this[this.tablereport_process_cycletime.stepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstep_typeNull() {
                return this.IsNull(this.tablereport_process_cycletime.step_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstep_typeNull() {
                this[this.tablereport_process_cycletime.step_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismin_timeNull() {
                return this.IsNull(this.tablereport_process_cycletime.min_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmin_timeNull() {
                this[this.tablereport_process_cycletime.min_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismax_timeNull() {
                return this.IsNull(this.tablereport_process_cycletime.max_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmax_timeNull() {
                this[this.tablereport_process_cycletime.max_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaverage_timeNull() {
                return this.IsNull(this.tablereport_process_cycletime.average_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaverage_timeNull() {
                this[this.tablereport_process_cycletime.average_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprev_step_posNull() {
                return this.IsNull(this.tablereport_process_cycletime.prev_step_posColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprev_step_posNull() {
                this[this.tablereport_process_cycletime.prev_step_posColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnext_step_posNull() {
                return this.IsNull(this.tablereport_process_cycletime.next_step_posColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnext_step_posNull() {
                this[this.tablereport_process_cycletime.next_step_posColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfalse_step_posNull() {
                return this.IsNull(this.tablereport_process_cycletime.false_step_posColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfalse_step_posNull() {
                this[this.tablereport_process_cycletime.false_step_posColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrework_limitNull() {
                return this.IsNull(this.tablereport_process_cycletime.rework_limitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrework_limitNull() {
                this[this.tablereport_process_cycletime.rework_limitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tablereport_process_cycletime.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriptionNull() {
                this[this.tablereport_process_cycletime.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaverage_yieldNull() {
                return this.IsNull(this.tablereport_process_cycletime.average_yieldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaverage_yieldNull() {
                this[this.tablereport_process_cycletime.average_yieldColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class report_lot_statusRow : global::System.Data.DataRow {
            
            private report_lot_statusDataTable tablereport_lot_status;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_lot_statusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereport_lot_status = ((report_lot_statusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint product_id {
                get {
                    return ((uint)(this[this.tablereport_lot_status.product_idColumn]));
                }
                set {
                    this[this.tablereport_lot_status.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    return ((string)(this[this.tablereport_lot_status.product_nameColumn]));
                }
                set {
                    this[this.tablereport_lot_status.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint order_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_status.order_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'order_id\' in table \'report_lot_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_status.order_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ponumber {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_status.ponumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ponumber\' in table \'report_lot_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_status.ponumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint client_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_status.client_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'client_id\' in table \'report_lot_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_status.client_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string client_name {
                get {
                    return ((string)(this[this.tablereport_lot_status.client_nameColumn]));
                }
                set {
                    this[this.tablereport_lot_status.client_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint process_id {
                get {
                    return ((uint)(this[this.tablereport_lot_status.process_idColumn]));
                }
                set {
                    this[this.tablereport_lot_status.process_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string process_name {
                get {
                    return ((string)(this[this.tablereport_lot_status.process_nameColumn]));
                }
                set {
                    this[this.tablereport_lot_status.process_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    return ((string)(this[this.tablereport_lot_status.statusColumn]));
                }
                set {
                    this[this.tablereport_lot_status.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal start_quantity {
                get {
                    return ((decimal)(this[this.tablereport_lot_status.start_quantityColumn]));
                }
                set {
                    this[this.tablereport_lot_status.start_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal actual_quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablereport_lot_status.actual_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'actual_quantity\' in table \'report_lot_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_status.actual_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ushort uomid {
                get {
                    return ((ushort)(this[this.tablereport_lot_status.uomidColumn]));
                }
                set {
                    this[this.tablereport_lot_status.uomidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom_name {
                get {
                    return ((string)(this[this.tablereport_lot_status.uom_nameColumn]));
                }
                set {
                    this[this.tablereport_lot_status.uom_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint contact {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_status.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'report_lot_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_status.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_status.contact_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact_name\' in table \'report_lot_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_status.contact_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte priority {
                get {
                    return ((byte)(this[this.tablereport_lot_status.priorityColumn]));
                }
                set {
                    this[this.tablereport_lot_status.priorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dispatch_time {
                get {
                    return ((global::System.DateTime)(this[this.tablereport_lot_status.dispatch_timeColumn]));
                }
                set {
                    this[this.tablereport_lot_status.dispatch_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime output_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablereport_lot_status.output_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'output_time\' in table \'report_lot_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_status.output_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string comment {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_status.commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comment\' in table \'report_lot_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_status.commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isorder_idNull() {
                return this.IsNull(this.tablereport_lot_status.order_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setorder_idNull() {
                this[this.tablereport_lot_status.order_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsponumberNull() {
                return this.IsNull(this.tablereport_lot_status.ponumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetponumberNull() {
                this[this.tablereport_lot_status.ponumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isclient_idNull() {
                return this.IsNull(this.tablereport_lot_status.client_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setclient_idNull() {
                this[this.tablereport_lot_status.client_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactual_quantityNull() {
                return this.IsNull(this.tablereport_lot_status.actual_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactual_quantityNull() {
                this[this.tablereport_lot_status.actual_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tablereport_lot_status.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tablereport_lot_status.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontact_nameNull() {
                return this.IsNull(this.tablereport_lot_status.contact_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontact_nameNull() {
                this[this.tablereport_lot_status.contact_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoutput_timeNull() {
                return this.IsNull(this.tablereport_lot_status.output_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoutput_timeNull() {
                this[this.tablereport_lot_status.output_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscommentNull() {
                return this.IsNull(this.tablereport_lot_status.commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcommentNull() {
                this[this.tablereport_lot_status.commentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class report_lot_historyRow : global::System.Data.DataRow {
            
            private report_lot_historyDataTable tablereport_lot_history;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_lot_historyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereport_lot_history = ((report_lot_historyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablereport_lot_history.start_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_time\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.start_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablereport_lot_history.end_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_time\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.end_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint process_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_history.process_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'process_id\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.process_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string process_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_history.process_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'process_name\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.process_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint sub_process_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_history.sub_process_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sub_process_id\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.sub_process_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sub_process_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_history.sub_process_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sub_process_name\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.sub_process_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint position_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_history.position_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'position_id\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.position_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint sub_position_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_history.sub_position_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sub_position_id\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.sub_position_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint step_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_history.step_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'step_id\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.step_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string step_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_history.step_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'step_name\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.step_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint start_operator_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_history.start_operator_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_operator_id\' in table \'report_lot_history\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.start_operator_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string start_operator_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_history.start_operator_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_operator_name\' in table \'report_lot_history\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.start_operator_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint end_operator_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_history.end_operator_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_operator_id\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.end_operator_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string end_operator_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_history.end_operator_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_operator_name\' in table \'report_lot_history\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.end_operator_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_history.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal start_quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablereport_lot_history.start_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_quantity\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.start_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal end_quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablereport_lot_history.end_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_quantity\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.end_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ushort uomid {
                get {
                    try {
                        return ((ushort)(this[this.tablereport_lot_history.uomidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uomid\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.uomidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_history.uom_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uom_name\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.uom_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint equipment_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_history.equipment_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'equipment_id\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.equipment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string equipment_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_history.equipment_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'equipment_name\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.equipment_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint device_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_history.device_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'device_id\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.device_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint approver_id {
                get {
                    try {
                        return ((uint)(this[this.tablereport_lot_history.approver_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approver_id\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.approver_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approver_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_history.approver_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approver_name\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.approver_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string result {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_history.resultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'result\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.resultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string comment {
                get {
                    try {
                        return ((string)(this[this.tablereport_lot_history.commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comment\' in table \'report_lot_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_lot_history.commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_timeNull() {
                return this.IsNull(this.tablereport_lot_history.start_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_timeNull() {
                this[this.tablereport_lot_history.start_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_timeNull() {
                return this.IsNull(this.tablereport_lot_history.end_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_timeNull() {
                this[this.tablereport_lot_history.end_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprocess_idNull() {
                return this.IsNull(this.tablereport_lot_history.process_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprocess_idNull() {
                this[this.tablereport_lot_history.process_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprocess_nameNull() {
                return this.IsNull(this.tablereport_lot_history.process_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprocess_nameNull() {
                this[this.tablereport_lot_history.process_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issub_process_idNull() {
                return this.IsNull(this.tablereport_lot_history.sub_process_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsub_process_idNull() {
                this[this.tablereport_lot_history.sub_process_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issub_process_nameNull() {
                return this.IsNull(this.tablereport_lot_history.sub_process_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsub_process_nameNull() {
                this[this.tablereport_lot_history.sub_process_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isposition_idNull() {
                return this.IsNull(this.tablereport_lot_history.position_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setposition_idNull() {
                this[this.tablereport_lot_history.position_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issub_position_idNull() {
                return this.IsNull(this.tablereport_lot_history.sub_position_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsub_position_idNull() {
                this[this.tablereport_lot_history.sub_position_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstep_idNull() {
                return this.IsNull(this.tablereport_lot_history.step_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstep_idNull() {
                this[this.tablereport_lot_history.step_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstep_nameNull() {
                return this.IsNull(this.tablereport_lot_history.step_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstep_nameNull() {
                this[this.tablereport_lot_history.step_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_operator_idNull() {
                return this.IsNull(this.tablereport_lot_history.start_operator_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_operator_idNull() {
                this[this.tablereport_lot_history.start_operator_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_operator_nameNull() {
                return this.IsNull(this.tablereport_lot_history.start_operator_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_operator_nameNull() {
                this[this.tablereport_lot_history.start_operator_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_operator_idNull() {
                return this.IsNull(this.tablereport_lot_history.end_operator_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_operator_idNull() {
                this[this.tablereport_lot_history.end_operator_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_operator_nameNull() {
                return this.IsNull(this.tablereport_lot_history.end_operator_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_operator_nameNull() {
                this[this.tablereport_lot_history.end_operator_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablereport_lot_history.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablereport_lot_history.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_quantityNull() {
                return this.IsNull(this.tablereport_lot_history.start_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_quantityNull() {
                this[this.tablereport_lot_history.start_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_quantityNull() {
                return this.IsNull(this.tablereport_lot_history.end_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_quantityNull() {
                this[this.tablereport_lot_history.end_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomidNull() {
                return this.IsNull(this.tablereport_lot_history.uomidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomidNull() {
                this[this.tablereport_lot_history.uomidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuom_nameNull() {
                return this.IsNull(this.tablereport_lot_history.uom_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuom_nameNull() {
                this[this.tablereport_lot_history.uom_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isequipment_idNull() {
                return this.IsNull(this.tablereport_lot_history.equipment_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setequipment_idNull() {
                this[this.tablereport_lot_history.equipment_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isequipment_nameNull() {
                return this.IsNull(this.tablereport_lot_history.equipment_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setequipment_nameNull() {
                this[this.tablereport_lot_history.equipment_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdevice_idNull() {
                return this.IsNull(this.tablereport_lot_history.device_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdevice_idNull() {
                this[this.tablereport_lot_history.device_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapprover_idNull() {
                return this.IsNull(this.tablereport_lot_history.approver_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapprover_idNull() {
                this[this.tablereport_lot_history.approver_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapprover_nameNull() {
                return this.IsNull(this.tablereport_lot_history.approver_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapprover_nameNull() {
                this[this.tablereport_lot_history.approver_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsresultNull() {
                return this.IsNull(this.tablereport_lot_history.resultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetresultNull() {
                this[this.tablereport_lot_history.resultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscommentNull() {
                return this.IsNull(this.tablereport_lot_history.commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcommentNull() {
                this[this.tablereport_lot_history.commentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataTable2Row : global::System.Data.DataRow {
            
            private DataTable2DataTable tableDataTable2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable2 = ((DataTable2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tableDataTable2.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string order_type {
                get {
                    if (this.Isorder_typeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableDataTable2.order_typeColumn]));
                    }
                }
                set {
                    this[this.tableDataTable2.order_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string client_name {
                get {
                    if (this.Isclient_nameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableDataTable2.client_nameColumn]));
                    }
                }
                set {
                    this[this.tableDataTable2.client_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ponumber {
                get {
                    if (this.IsponumberNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableDataTable2.ponumberColumn]));
                    }
                }
                set {
                    this[this.tableDataTable2.ponumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime order_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable2.order_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'order_date\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.order_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity_made {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable2.quantity_madeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity_made\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.quantity_madeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity_in_process {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable2.quantity_in_processColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity_in_process\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.quantity_in_processColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity_shipped {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable2.quantity_shippedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity_shipped\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.quantity_shippedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string quantity_requested {
                get {
                    if (this.Isquantity_requestedNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableDataTable2.quantity_requestedColumn]));
                    }
                }
                set {
                    this[this.tableDataTable2.quantity_requestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    if (this.IsuomNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableDataTable2.uomColumn]));
                    }
                }
                set {
                    this[this.tableDataTable2.uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableDataTable2.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableDataTable2.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isorder_typeNull() {
                return this.IsNull(this.tableDataTable2.order_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setorder_typeNull() {
                this[this.tableDataTable2.order_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isclient_nameNull() {
                return this.IsNull(this.tableDataTable2.client_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setclient_nameNull() {
                this[this.tableDataTable2.client_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsponumberNull() {
                return this.IsNull(this.tableDataTable2.ponumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetponumberNull() {
                this[this.tableDataTable2.ponumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isorder_dateNull() {
                return this.IsNull(this.tableDataTable2.order_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setorder_dateNull() {
                this[this.tableDataTable2.order_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isquantity_madeNull() {
                return this.IsNull(this.tableDataTable2.quantity_madeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setquantity_madeNull() {
                this[this.tableDataTable2.quantity_madeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isquantity_in_processNull() {
                return this.IsNull(this.tableDataTable2.quantity_in_processColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setquantity_in_processNull() {
                this[this.tableDataTable2.quantity_in_processColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isquantity_shippedNull() {
                return this.IsNull(this.tableDataTable2.quantity_shippedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setquantity_shippedNull() {
                this[this.tableDataTable2.quantity_shippedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isquantity_requestedNull() {
                return this.IsNull(this.tableDataTable2.quantity_requestedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setquantity_requestedNull() {
                this[this.tableDataTable2.quantity_requestedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomNull() {
                return this.IsNull(this.tableDataTable2.uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomNull() {
                this[this.tableDataTable2.uomColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class report_process_bomRow : global::System.Data.DataRow {
            
            private report_process_bomDataTable tablereport_process_bom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_process_bomRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereport_process_bom = ((report_process_bomDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string position_id {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.position_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'position_id\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.position_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sub_position_id {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.sub_position_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sub_position_id\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.sub_position_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string step {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.stepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'step\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.stepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recipe {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.recipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recipe\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.recipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string source_type {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.source_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'source_type\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.source_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ingredient_id {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.ingredient_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ingredient_id\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.ingredient_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ingredient_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.ingredient_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ingredient_name\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.ingredient_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string quantity {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.uomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uom\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string input_order {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.input_orderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'input_order\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.input_orderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string unassigned_quantity {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.unassigned_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unassigned_quantity\' in table \'report_process_bom\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.unassigned_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assigned_quantity {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.assigned_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assigned_quantity\' in table \'report_process_bom\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.assigned_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string alert_quantity {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.alert_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alert_quantity\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.alert_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ifalert {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.ifalertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ifalert\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.ifalertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string unassigned_uom {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom.unassigned_uomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unassigned_uom\' in table \'report_process_bom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom.unassigned_uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isposition_idNull() {
                return this.IsNull(this.tablereport_process_bom.position_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setposition_idNull() {
                this[this.tablereport_process_bom.position_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issub_position_idNull() {
                return this.IsNull(this.tablereport_process_bom.sub_position_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsub_position_idNull() {
                this[this.tablereport_process_bom.sub_position_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstepNull() {
                return this.IsNull(this.tablereport_process_bom.stepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstepNull() {
                this[this.tablereport_process_bom.stepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrecipeNull() {
                return this.IsNull(this.tablereport_process_bom.recipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrecipeNull() {
                this[this.tablereport_process_bom.recipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issource_typeNull() {
                return this.IsNull(this.tablereport_process_bom.source_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsource_typeNull() {
                this[this.tablereport_process_bom.source_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isingredient_idNull() {
                return this.IsNull(this.tablereport_process_bom.ingredient_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setingredient_idNull() {
                this[this.tablereport_process_bom.ingredient_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isingredient_nameNull() {
                return this.IsNull(this.tablereport_process_bom.ingredient_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setingredient_nameNull() {
                this[this.tablereport_process_bom.ingredient_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tablereport_process_bom.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tablereport_process_bom.quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomNull() {
                return this.IsNull(this.tablereport_process_bom.uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomNull() {
                this[this.tablereport_process_bom.uomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinput_orderNull() {
                return this.IsNull(this.tablereport_process_bom.input_orderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinput_orderNull() {
                this[this.tablereport_process_bom.input_orderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isunassigned_quantityNull() {
                return this.IsNull(this.tablereport_process_bom.unassigned_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setunassigned_quantityNull() {
                this[this.tablereport_process_bom.unassigned_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassigned_quantityNull() {
                return this.IsNull(this.tablereport_process_bom.assigned_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassigned_quantityNull() {
                this[this.tablereport_process_bom.assigned_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalert_quantityNull() {
                return this.IsNull(this.tablereport_process_bom.alert_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalert_quantityNull() {
                this[this.tablereport_process_bom.alert_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsifalertNull() {
                return this.IsNull(this.tablereport_process_bom.ifalertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetifalertNull() {
                this[this.tablereport_process_bom.ifalertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isunassigned_uomNull() {
                return this.IsNull(this.tablereport_process_bom.unassigned_uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setunassigned_uomNull() {
                this[this.tablereport_process_bom.unassigned_uomColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class report_process_bom_totalRow : global::System.Data.DataRow {
            
            private report_process_bom_totalDataTable tablereport_process_bom_total;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_process_bom_totalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereport_process_bom_total = ((report_process_bom_totalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string source_type {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom_total.source_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'source_type\' in table \'report_process_bom_total\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom_total.source_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ingredient_id {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom_total.ingredient_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ingredient_id\' in table \'report_process_bom_total\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom_total.ingredient_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ingredient_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom_total.ingredient_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ingredient_name\' in table \'report_process_bom_total\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom_total.ingredient_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string quantity {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom_total.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'report_process_bom_total\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom_total.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom_total.uomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uom\' in table \'report_process_bom_total\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom_total.uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string unassigned_quantity {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom_total.unassigned_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unassigned_quantity\' in table \'report_process_bom_total\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom_total.unassigned_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assigned_quantity_show {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom_total.assigned_quantity_showColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assigned_quantity_show\' in table \'report_process_bom_total\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom_total.assigned_quantity_showColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom_total.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'report_process_bom_total\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom_total.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string alert_quantity {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom_total.alert_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alert_quantity\' in table \'report_process_bom_total\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom_total.alert_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ifalert {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom_total.ifalertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ifalert\' in table \'report_process_bom_total\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom_total.ifalertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string unassigned_uom {
                get {
                    try {
                        return ((string)(this[this.tablereport_process_bom_total.unassigned_uomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unassigned_uom\' in table \'report_process_bom_total\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablereport_process_bom_total.unassigned_uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issource_typeNull() {
                return this.IsNull(this.tablereport_process_bom_total.source_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsource_typeNull() {
                this[this.tablereport_process_bom_total.source_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isingredient_idNull() {
                return this.IsNull(this.tablereport_process_bom_total.ingredient_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setingredient_idNull() {
                this[this.tablereport_process_bom_total.ingredient_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isingredient_nameNull() {
                return this.IsNull(this.tablereport_process_bom_total.ingredient_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setingredient_nameNull() {
                this[this.tablereport_process_bom_total.ingredient_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tablereport_process_bom_total.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tablereport_process_bom_total.quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomNull() {
                return this.IsNull(this.tablereport_process_bom_total.uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomNull() {
                this[this.tablereport_process_bom_total.uomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isunassigned_quantityNull() {
                return this.IsNull(this.tablereport_process_bom_total.unassigned_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setunassigned_quantityNull() {
                this[this.tablereport_process_bom_total.unassigned_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassigned_quantity_showNull() {
                return this.IsNull(this.tablereport_process_bom_total.assigned_quantity_showColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassigned_quantity_showNull() {
                this[this.tablereport_process_bom_total.assigned_quantity_showColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablereport_process_bom_total.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablereport_process_bom_total.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalert_quantityNull() {
                return this.IsNull(this.tablereport_process_bom_total.alert_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalert_quantityNull() {
                this[this.tablereport_process_bom_total.alert_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsifalertNull() {
                return this.IsNull(this.tablereport_process_bom_total.ifalertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetifalertNull() {
                this[this.tablereport_process_bom_total.ifalertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isunassigned_uomNull() {
                return this.IsNull(this.tablereport_process_bom_total.unassigned_uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setunassigned_uomNull() {
                this[this.tablereport_process_bom_total.unassigned_uomColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class select_step_detailsRow : global::System.Data.DataRow {
            
            private select_step_detailsDataTable tableselect_step_details;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal select_step_detailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableselect_step_details = ((select_step_detailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string step_name {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.step_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'step_name\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.step_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string step_type_id {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.step_type_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'step_type_id\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.step_type_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string step_type_name {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.step_type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'step_type_name\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.step_type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string version {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.versionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'version\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.versionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string state {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'state\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eq_usage {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.eq_usageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eq_usage\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.eq_usageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eq_name {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.eq_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eq_name\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.eq_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string emp_usage {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.emp_usageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'emp_usage\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.emp_usageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string emp_id {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.emp_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'emp_id\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.emp_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string emp_name {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.emp_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'emp_name\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.emp_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recipe_id {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.recipe_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recipe_id\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.recipe_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mintime {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.mintimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mintime\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.mintimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string maxtime {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.maxtimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maxtime\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.maxtimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string step_comment {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.step_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'step_comment\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.step_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string para1 {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.para1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'para1\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.para1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string para2 {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.para2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'para2\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.para2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string para3 {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.para3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'para3\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.para3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string para4 {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.para4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'para4\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.para4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string para5 {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.para5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'para5\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.para5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string para6 {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.para6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'para6\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.para6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string para7 {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.para7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'para7\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.para7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string para8 {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.para8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'para8\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.para8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string para9 {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.para9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'para9\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.para9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string para10 {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.para10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'para10\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.para10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recipe_name {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.recipe_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recipe_name\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.recipe_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string exec_method {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.exec_methodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'exec_method\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.exec_methodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact_employee {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.contact_employeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact_employee\' in table \'select_step_details\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.contact_employeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact_employee_name {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.contact_employee_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact_employee_name\' in table \'select_step_details\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.contact_employee_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string instruction {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.instructionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'instruction\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.instructionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string diagram_filename {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.diagram_filenameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diagram_filename\' in table \'select_step_details\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.diagram_filenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recipe_comment {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.recipe_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recipe_comment\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.recipe_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eq_id {
                get {
                    try {
                        return ((string)(this[this.tableselect_step_details.eq_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eq_id\' in table \'select_step_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableselect_step_details.eq_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstep_nameNull() {
                return this.IsNull(this.tableselect_step_details.step_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstep_nameNull() {
                this[this.tableselect_step_details.step_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstep_type_idNull() {
                return this.IsNull(this.tableselect_step_details.step_type_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstep_type_idNull() {
                this[this.tableselect_step_details.step_type_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstep_type_nameNull() {
                return this.IsNull(this.tableselect_step_details.step_type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstep_type_nameNull() {
                this[this.tableselect_step_details.step_type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsversionNull() {
                return this.IsNull(this.tableselect_step_details.versionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetversionNull() {
                this[this.tableselect_step_details.versionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstateNull() {
                return this.IsNull(this.tableselect_step_details.stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstateNull() {
                this[this.tableselect_step_details.stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iseq_usageNull() {
                return this.IsNull(this.tableselect_step_details.eq_usageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seteq_usageNull() {
                this[this.tableselect_step_details.eq_usageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iseq_nameNull() {
                return this.IsNull(this.tableselect_step_details.eq_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seteq_nameNull() {
                this[this.tableselect_step_details.eq_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemp_usageNull() {
                return this.IsNull(this.tableselect_step_details.emp_usageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemp_usageNull() {
                this[this.tableselect_step_details.emp_usageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemp_idNull() {
                return this.IsNull(this.tableselect_step_details.emp_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemp_idNull() {
                this[this.tableselect_step_details.emp_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemp_nameNull() {
                return this.IsNull(this.tableselect_step_details.emp_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemp_nameNull() {
                this[this.tableselect_step_details.emp_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrecipe_idNull() {
                return this.IsNull(this.tableselect_step_details.recipe_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrecipe_idNull() {
                this[this.tableselect_step_details.recipe_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmintimeNull() {
                return this.IsNull(this.tableselect_step_details.mintimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmintimeNull() {
                this[this.tableselect_step_details.mintimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaxtimeNull() {
                return this.IsNull(this.tableselect_step_details.maxtimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaxtimeNull() {
                this[this.tableselect_step_details.maxtimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tableselect_step_details.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriptionNull() {
                this[this.tableselect_step_details.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstep_commentNull() {
                return this.IsNull(this.tableselect_step_details.step_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstep_commentNull() {
                this[this.tableselect_step_details.step_commentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispara1Null() {
                return this.IsNull(this.tableselect_step_details.para1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpara1Null() {
                this[this.tableselect_step_details.para1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispara2Null() {
                return this.IsNull(this.tableselect_step_details.para2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpara2Null() {
                this[this.tableselect_step_details.para2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispara3Null() {
                return this.IsNull(this.tableselect_step_details.para3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpara3Null() {
                this[this.tableselect_step_details.para3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispara4Null() {
                return this.IsNull(this.tableselect_step_details.para4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpara4Null() {
                this[this.tableselect_step_details.para4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispara5Null() {
                return this.IsNull(this.tableselect_step_details.para5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpara5Null() {
                this[this.tableselect_step_details.para5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispara6Null() {
                return this.IsNull(this.tableselect_step_details.para6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpara6Null() {
                this[this.tableselect_step_details.para6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispara7Null() {
                return this.IsNull(this.tableselect_step_details.para7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpara7Null() {
                this[this.tableselect_step_details.para7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispara8Null() {
                return this.IsNull(this.tableselect_step_details.para8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpara8Null() {
                this[this.tableselect_step_details.para8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispara9Null() {
                return this.IsNull(this.tableselect_step_details.para9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpara9Null() {
                this[this.tableselect_step_details.para9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispara10Null() {
                return this.IsNull(this.tableselect_step_details.para10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpara10Null() {
                this[this.tableselect_step_details.para10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrecipe_nameNull() {
                return this.IsNull(this.tableselect_step_details.recipe_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrecipe_nameNull() {
                this[this.tableselect_step_details.recipe_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isexec_methodNull() {
                return this.IsNull(this.tableselect_step_details.exec_methodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setexec_methodNull() {
                this[this.tableselect_step_details.exec_methodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontact_employeeNull() {
                return this.IsNull(this.tableselect_step_details.contact_employeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontact_employeeNull() {
                this[this.tableselect_step_details.contact_employeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontact_employee_nameNull() {
                return this.IsNull(this.tableselect_step_details.contact_employee_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontact_employee_nameNull() {
                this[this.tableselect_step_details.contact_employee_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinstructionNull() {
                return this.IsNull(this.tableselect_step_details.instructionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinstructionNull() {
                this[this.tableselect_step_details.instructionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdiagram_filenameNull() {
                return this.IsNull(this.tableselect_step_details.diagram_filenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdiagram_filenameNull() {
                this[this.tableselect_step_details.diagram_filenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrecipe_commentNull() {
                return this.IsNull(this.tableselect_step_details.recipe_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrecipe_commentNull() {
                this[this.tableselect_step_details.recipe_commentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iseq_idNull() {
                return this.IsNull(this.tableselect_step_details.eq_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seteq_idNull() {
                this[this.tableselect_step_details.eq_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class report_dispatch_historyRow : global::System.Data.DataRow {
            
            private report_dispatch_historyDataTable tablereport_dispatch_history;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_dispatch_historyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereport_dispatch_history = ((report_dispatch_historyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lot_id {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.lot_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lot_id\' in table \'report_dispatch_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.lot_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lot_alias {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.lot_aliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lot_alias\' in table \'report_dispatch_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.lot_aliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ponumber {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.ponumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ponumber\' in table \'report_dispatch_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.ponumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'report_dispatch_history\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string process_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.process_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'process_name\' in table \'report_dispatch_history\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.process_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string state {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'state\' in table \'report_dispatch_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string start_quantity {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.start_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_quantity\' in table \'report_dispatch_history\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.start_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string actual_quantity {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.actual_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'actual_quantity\' in table \'report_dispatch_history\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.actual_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.uomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uom\' in table \'report_dispatch_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dispatch_time {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.dispatch_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dispatch_time\' in table \'report_dispatch_history\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.dispatch_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dispatcher {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.dispatcherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dispatcher\' in table \'report_dispatch_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.dispatcherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'report_dispatch_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string prioirty {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.prioirtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prioirty\' in table \'report_dispatch_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.prioirtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string curstatus {
                get {
                    try {
                        return ((string)(this[this.tablereport_dispatch_history.curstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'curstatus\' in table \'report_dispatch_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_dispatch_history.curstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islot_idNull() {
                return this.IsNull(this.tablereport_dispatch_history.lot_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlot_idNull() {
                this[this.tablereport_dispatch_history.lot_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islot_aliasNull() {
                return this.IsNull(this.tablereport_dispatch_history.lot_aliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlot_aliasNull() {
                this[this.tablereport_dispatch_history.lot_aliasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsponumberNull() {
                return this.IsNull(this.tablereport_dispatch_history.ponumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetponumberNull() {
                this[this.tablereport_dispatch_history.ponumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablereport_dispatch_history.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablereport_dispatch_history.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprocess_nameNull() {
                return this.IsNull(this.tablereport_dispatch_history.process_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprocess_nameNull() {
                this[this.tablereport_dispatch_history.process_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstateNull() {
                return this.IsNull(this.tablereport_dispatch_history.stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstateNull() {
                this[this.tablereport_dispatch_history.stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_quantityNull() {
                return this.IsNull(this.tablereport_dispatch_history.start_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_quantityNull() {
                this[this.tablereport_dispatch_history.start_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactual_quantityNull() {
                return this.IsNull(this.tablereport_dispatch_history.actual_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactual_quantityNull() {
                this[this.tablereport_dispatch_history.actual_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomNull() {
                return this.IsNull(this.tablereport_dispatch_history.uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomNull() {
                this[this.tablereport_dispatch_history.uomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdispatch_timeNull() {
                return this.IsNull(this.tablereport_dispatch_history.dispatch_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdispatch_timeNull() {
                this[this.tablereport_dispatch_history.dispatch_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdispatcherNull() {
                return this.IsNull(this.tablereport_dispatch_history.dispatcherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdispatcherNull() {
                this[this.tablereport_dispatch_history.dispatcherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tablereport_dispatch_history.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tablereport_dispatch_history.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprioirtyNull() {
                return this.IsNull(this.tablereport_dispatch_history.prioirtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprioirtyNull() {
                this[this.tablereport_dispatch_history.prioirtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurstatusNull() {
                return this.IsNull(this.tablereport_dispatch_history.curstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurstatusNull() {
                this[this.tablereport_dispatch_history.curstatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class report_product_in_processRow : global::System.Data.DataRow {
            
            private report_product_in_processDataTable tablereport_product_in_process;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_product_in_processRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereport_product_in_process = ((report_product_in_processDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lot_id {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.lot_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lot_id\' in table \'report_product_in_process\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.lot_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lot_alias {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.lot_aliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lot_alias\' in table \'report_product_in_process\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.lot_aliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ponumber {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.ponumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ponumber\' in table \'report_product_in_process\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.ponumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'report_product_in_process\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string process_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.process_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'process_name\' in table \'report_product_in_process\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.process_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lot_status {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.lot_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lot_status\' in table \'report_product_in_process\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.lot_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string start_quantity {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.start_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_quantity\' in table \'report_product_in_process\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.start_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string actual_quantity {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.actual_quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'actual_quantity\' in table \'report_product_in_process\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.actual_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.uomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uom\' in table \'report_product_in_process\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dispatch_time {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.dispatch_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dispatch_time\' in table \'report_product_in_process\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.dispatch_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dispatcher {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.dispatcherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dispatcher\' in table \'report_product_in_process\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.dispatcherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'report_product_in_process\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string priority {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.priorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'priority\' in table \'report_product_in_process\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.priorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string step_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.step_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'step_name\' in table \'report_product_in_process\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.step_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string step_status {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.step_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'step_status\' in table \'report_product_in_process\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.step_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string last_step_starttime {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.last_step_starttimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'last_step_starttime\' in table \'report_product_in_process\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.last_step_starttimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string batch_link {
                get {
                    try {
                        return ((string)(this[this.tablereport_product_in_process.batch_linkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'batch_link\' in table \'report_product_in_process\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablereport_product_in_process.batch_linkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islot_idNull() {
                return this.IsNull(this.tablereport_product_in_process.lot_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlot_idNull() {
                this[this.tablereport_product_in_process.lot_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islot_aliasNull() {
                return this.IsNull(this.tablereport_product_in_process.lot_aliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlot_aliasNull() {
                this[this.tablereport_product_in_process.lot_aliasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsponumberNull() {
                return this.IsNull(this.tablereport_product_in_process.ponumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetponumberNull() {
                this[this.tablereport_product_in_process.ponumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablereport_product_in_process.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablereport_product_in_process.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprocess_nameNull() {
                return this.IsNull(this.tablereport_product_in_process.process_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprocess_nameNull() {
                this[this.tablereport_product_in_process.process_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islot_statusNull() {
                return this.IsNull(this.tablereport_product_in_process.lot_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlot_statusNull() {
                this[this.tablereport_product_in_process.lot_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_quantityNull() {
                return this.IsNull(this.tablereport_product_in_process.start_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_quantityNull() {
                this[this.tablereport_product_in_process.start_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactual_quantityNull() {
                return this.IsNull(this.tablereport_product_in_process.actual_quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactual_quantityNull() {
                this[this.tablereport_product_in_process.actual_quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomNull() {
                return this.IsNull(this.tablereport_product_in_process.uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomNull() {
                this[this.tablereport_product_in_process.uomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdispatch_timeNull() {
                return this.IsNull(this.tablereport_product_in_process.dispatch_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdispatch_timeNull() {
                this[this.tablereport_product_in_process.dispatch_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdispatcherNull() {
                return this.IsNull(this.tablereport_product_in_process.dispatcherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdispatcherNull() {
                this[this.tablereport_product_in_process.dispatcherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tablereport_product_in_process.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tablereport_product_in_process.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriorityNull() {
                return this.IsNull(this.tablereport_product_in_process.priorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriorityNull() {
                this[this.tablereport_product_in_process.priorityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstep_nameNull() {
                return this.IsNull(this.tablereport_product_in_process.step_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstep_nameNull() {
                this[this.tablereport_product_in_process.step_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstep_statusNull() {
                return this.IsNull(this.tablereport_product_in_process.step_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstep_statusNull() {
                this[this.tablereport_product_in_process.step_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islast_step_starttimeNull() {
                return this.IsNull(this.tablereport_product_in_process.last_step_starttimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlast_step_starttimeNull() {
                this[this.tablereport_product_in_process.last_step_starttimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbatch_linkNull() {
                return this.IsNull(this.tablereport_product_in_process.batch_linkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbatch_linkNull() {
                this[this.tablereport_product_in_process.batch_linkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class report_order_quantityRow : global::System.Data.DataRow {
            
            private report_order_quantityDataTable tablereport_order_quantity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal report_order_quantityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereport_order_quantity = ((report_order_quantityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'report_order_quantity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string order_type {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.order_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'order_type\' in table \'report_order_quantity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.order_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string client_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.client_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'client_name\' in table \'report_order_quantity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.client_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ponumber {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.ponumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ponumber\' in table \'report_order_quantity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.ponumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string order_date {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.order_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'order_date\' in table \'report_order_quantity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.order_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.product_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_id\' in table \'report_order_quantity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'report_order_quantity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string quantity_made {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.quantity_madeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity_made\' in table \'report_order_quantity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.quantity_madeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string quantity_in_process {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.quantity_in_processColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity_in_process\' in table \'report_order_quantity\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.quantity_in_processColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string quantity_shipped {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.quantity_shippedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity_shipped\' in table \'report_order_quantity\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.quantity_shippedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string quantity_requested {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.quantity_requestedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity_requested\' in table \'report_order_quantity\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.quantity_requestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    try {
                        return ((string)(this[this.tablereport_order_quantity.uomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uom\' in table \'report_order_quantity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereport_order_quantity.uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tablereport_order_quantity.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tablereport_order_quantity.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isorder_typeNull() {
                return this.IsNull(this.tablereport_order_quantity.order_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setorder_typeNull() {
                this[this.tablereport_order_quantity.order_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isclient_nameNull() {
                return this.IsNull(this.tablereport_order_quantity.client_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setclient_nameNull() {
                this[this.tablereport_order_quantity.client_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsponumberNull() {
                return this.IsNull(this.tablereport_order_quantity.ponumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetponumberNull() {
                this[this.tablereport_order_quantity.ponumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isorder_dateNull() {
                return this.IsNull(this.tablereport_order_quantity.order_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setorder_dateNull() {
                this[this.tablereport_order_quantity.order_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_idNull() {
                return this.IsNull(this.tablereport_order_quantity.product_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_idNull() {
                this[this.tablereport_order_quantity.product_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablereport_order_quantity.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablereport_order_quantity.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isquantity_madeNull() {
                return this.IsNull(this.tablereport_order_quantity.quantity_madeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setquantity_madeNull() {
                this[this.tablereport_order_quantity.quantity_madeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isquantity_in_processNull() {
                return this.IsNull(this.tablereport_order_quantity.quantity_in_processColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setquantity_in_processNull() {
                this[this.tablereport_order_quantity.quantity_in_processColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isquantity_shippedNull() {
                return this.IsNull(this.tablereport_order_quantity.quantity_shippedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setquantity_shippedNull() {
                this[this.tablereport_order_quantity.quantity_shippedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isquantity_requestedNull() {
                return this.IsNull(this.tablereport_order_quantity.quantity_requestedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setquantity_requestedNull() {
                this[this.tablereport_order_quantity.quantity_requestedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomNull() {
                return this.IsNull(this.tablereport_order_quantity.uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomNull() {
                this[this.tablereport_order_quantity.uomColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class report_process_cycletimeRowChangeEvent : global::System.EventArgs {
            
            private report_process_cycletimeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_cycletimeRowChangeEvent(report_process_cycletimeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_cycletimeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class report_lot_statusRowChangeEvent : global::System.EventArgs {
            
            private report_lot_statusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_statusRowChangeEvent(report_lot_statusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_statusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class report_lot_historyRowChangeEvent : global::System.EventArgs {
            
            private report_lot_historyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_historyRowChangeEvent(report_lot_historyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_lot_historyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataTable2RowChangeEvent : global::System.EventArgs {
            
            private DataTable2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable2RowChangeEvent(DataTable2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class report_process_bomRowChangeEvent : global::System.EventArgs {
            
            private report_process_bomRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bomRowChangeEvent(report_process_bomRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bomRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class report_process_bom_totalRowChangeEvent : global::System.EventArgs {
            
            private report_process_bom_totalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bom_totalRowChangeEvent(report_process_bom_totalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_process_bom_totalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class select_step_detailsRowChangeEvent : global::System.EventArgs {
            
            private select_step_detailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public select_step_detailsRowChangeEvent(select_step_detailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public select_step_detailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class report_dispatch_historyRowChangeEvent : global::System.EventArgs {
            
            private report_dispatch_historyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_dispatch_historyRowChangeEvent(report_dispatch_historyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_dispatch_historyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class report_product_in_processRowChangeEvent : global::System.EventArgs {
            
            private report_product_in_processRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_product_in_processRowChangeEvent(report_product_in_processRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_product_in_processRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class report_order_quantityRowChangeEvent : global::System.EventArgs {
            
            private report_order_quantityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_order_quantityRowChangeEvent(report_order_quantityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public report_order_quantityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591